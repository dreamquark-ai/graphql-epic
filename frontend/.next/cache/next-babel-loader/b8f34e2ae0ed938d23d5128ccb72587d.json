{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/cards/CardSeparator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nexport function CardSeparator(_ref) {\n  let {\n    className,\n    fullWidth = false\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"className\", \"fullWidth\"]);\n\n  const separatorClassName = classnames(\"brain-c-card__separator\", {\n    \"brain-c-card__separator--full-width\": fullWidth\n  }, className);\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, otherProps), {}, {\n    className: separatorClassName\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\nCardSeparator.propTypes = {\n  /**\n   * Additional className for separator\n   */\n  className: PropTypes.string,\n\n  /**\n   * If separator is full width\n   */\n  fullWidth: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/cards/CardSeparator.js"],"names":["React","PropTypes","classnames","CardSeparator","className","fullWidth","otherProps","separatorClassName","propTypes","string","bool"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,SAASC,aAAT,OAAwE;AAAA,MAAjD;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAS,GAAG;AAAzB,GAAiD;AAAA,MAAdC,UAAc;;AAC3E,QAAMC,kBAAkB,GAAGL,UAAU,CACjC,yBADiC,EAEjC;AAAE,2CAAuCG;AAAzC,GAFiC,EAGjCD,SAHiC,CAArC;AAMA,sBAAO,+CAASE,UAAT;AAAqB,IAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAEDJ,aAAa,CAACK,SAAd,GAA0B;AACtB;AACJ;AACA;AACIJ,EAAAA,SAAS,EAAEH,SAAS,CAACQ,MAJC;;AAKtB;AACJ;AACA;AACIJ,EAAAA,SAAS,EAAEJ,SAAS,CAACS;AARC,CAA1B","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport function CardSeparator({ className, fullWidth = false, ...otherProps }) {\n    const separatorClassName = classnames(\n        \"brain-c-card__separator\",\n        { \"brain-c-card__separator--full-width\": fullWidth },\n        className\n    );\n\n    return <div {...otherProps} className={separatorClassName} />;\n}\n\nCardSeparator.propTypes = {\n    /**\n     * Additional className for separator\n     */\n    className: PropTypes.string,\n    /**\n     * If separator is full width\n     */\n    fullWidth: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}