{"ast":null,"code":"import _defineProperty from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/ToastContainer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Libs\nimport React, { useCallback, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Components\n\nimport { ToastContainer as ToastifyContainer, toast as toastifyToast } from \"react-toastify\";\nimport { ButtonIcon } from \"../buttons\";\nimport { useTheme, THEME } from \"../layout\";\nimport { Toast } from \"./Toast\";\n/**\n * Toast context\n */\n\nvar ToastContext = /*#__PURE__*/React.createContext();\n/**\n * Inner component to display Close button on toasts\n */\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast;\n  return /*#__PURE__*/_jsxDEV(ButtonIcon, {\n    icon: \"close\",\n    onClick: closeToast,\n    type: \"secondary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n/**\n * Hook to access toast context\n */\n\n\n_c = CloseButton;\nexport function useToast() {\n  _s();\n\n  return useContext(ToastContext);\n}\n\n_s(useToast, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ToastContainer(_ref2) {\n  _s2();\n\n  var _this = this;\n\n  var children = _ref2.children,\n      className = _ref2.className,\n      containerProps = _ref2.containerProps,\n      _ref2$position = _ref2.position,\n      position = _ref2$position === void 0 ? \"bottom-left\" : _ref2$position,\n      toastClassNameProp = _ref2.toastClassName;\n  var rootClassName = classnames(\"brain-c-toast__container\", className);\n  var toastClassName = classnames(\"brain-c-toast\", toastClassNameProp);\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n  /**\n   * Wrapper to enqueue a toast using custom Toast component\n   */\n\n\n  var enqueueToast = useCallback(function (content, options) {\n    if (!options.type) {\n      options.type = theme === THEME.LIGHT ? toastifyToast.TYPE.DEFAULT : toastifyToast.TYPE.DARK;\n    }\n\n    return toastifyToast( /*#__PURE__*/_jsxDEV(Toast, {\n      content: content,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 34\n    }, _this), options);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      enqueueToast: enqueueToast,\n      dismissToast: toastifyToast.dismiss\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: rootClassName,\n      children: [children, /*#__PURE__*/_jsxDEV(ToastifyContainer, _objectSpread(_objectSpread({\n        autoClose: 5000,\n        closeButton: CloseButton,\n        limit: 3,\n        newestOnTop: true,\n        pauseOnFocusLoss: true,\n        pauseOnHover: true,\n        position: position\n      }, containerProps), {}, {\n        toastClassName: toastClassName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ToastContainer, \"Kd2URqRArVKo2xq37S0jz6pKMlU=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = ToastContainer;\nToastContainer.propTypes = {\n  /**\n   * Children to display\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional className for Container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Additional props for Container\n   */\n  containerProps: PropTypes.shape(ToastifyContainer.propTypes),\n\n  /**\n   * Position of container\n   */\n  position: PropTypes.string,\n\n  /**\n   * Additional className for Toast\n   */\n  toastClassName: PropTypes.string\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CloseButton\");\n$RefreshReg$(_c2, \"ToastContainer\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/ToastContainer.js"],"names":["React","useCallback","useContext","PropTypes","classnames","ToastContainer","ToastifyContainer","toast","toastifyToast","ButtonIcon","useTheme","THEME","Toast","ToastContext","createContext","CloseButton","closeToast","useToast","children","className","containerProps","position","toastClassNameProp","toastClassName","rootClassName","theme","enqueueToast","content","options","type","LIGHT","TYPE","DEFAULT","DARK","dismissToast","dismiss","propTypes","node","string","shape"],"mappings":"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","sourcesContent":["// Libs\nimport React, { useCallback, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Components\nimport { ToastContainer as ToastifyContainer, toast as toastifyToast } from \"react-toastify\";\nimport { ButtonIcon } from \"../buttons\";\nimport { useTheme, THEME } from \"../layout\";\nimport { Toast } from \"./Toast\";\n\n/**\n * Toast context\n */\nconst ToastContext = React.createContext();\n\n/**\n * Inner component to display Close button on toasts\n */\nfunction CloseButton({ closeToast }) {\n    return <ButtonIcon icon=\"close\" onClick={closeToast} type=\"secondary\" />;\n}\n\n/**\n * Hook to access toast context\n */\nexport function useToast() {\n    return useContext(ToastContext);\n}\n\nexport function ToastContainer({\n    children,\n    className,\n    containerProps,\n    position = \"bottom-left\",\n    toastClassName: toastClassNameProp,\n}) {\n    const rootClassName = classnames(\"brain-c-toast__container\", className);\n    const toastClassName = classnames(\"brain-c-toast\", toastClassNameProp);\n\n    const { theme } = useTheme();\n\n    /**\n     * Wrapper to enqueue a toast using custom Toast component\n     */\n    const enqueueToast = useCallback(\n        (content, options) => {\n            if (!options.type) {\n                options.type = theme === THEME.LIGHT ? toastifyToast.TYPE.DEFAULT : toastifyToast.TYPE.DARK;\n            }\n\n            return toastifyToast(<Toast content={content} options={options} />, options);\n        },\n        [theme]\n    );\n\n    return (\n        <ToastContext.Provider value={{ enqueueToast, dismissToast: toastifyToast.dismiss }}>\n            <div className={rootClassName}>\n                {children}\n                <ToastifyContainer\n                    autoClose={5000}\n                    closeButton={CloseButton}\n                    limit={3}\n                    newestOnTop\n                    pauseOnFocusLoss\n                    pauseOnHover\n                    position={position}\n                    {...containerProps}\n                    toastClassName={toastClassName}\n                />\n            </div>\n        </ToastContext.Provider>\n    );\n}\n\nToastContainer.propTypes = {\n    /**\n     * Children to display\n     */\n    children: PropTypes.node,\n    /**\n     * Additional className for Container\n     */\n    className: PropTypes.string,\n    /**\n     * Additional props for Container\n     */\n    containerProps: PropTypes.shape(ToastifyContainer.propTypes),\n    /**\n     * Position of container\n     */\n    position: PropTypes.string,\n    /**\n     * Additional className for Toast\n     */\n    toastClassName: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}