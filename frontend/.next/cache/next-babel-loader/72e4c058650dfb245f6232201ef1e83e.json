{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/Portal.js\",\n    _s = $RefreshSig$();\n\n// Libs\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\"; // Components\n\nimport { ThemeProvider } from \"../layout\";\nexport function Portal(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(),\n      element = _useState[0],\n      setElement = _useState[1];\n\n  useEffect(function () {\n    var _element = document.createElement(\"div\");\n\n    setElement(_element);\n    document.body.appendChild(_element);\n    return function () {\n      document.body.removeChild(_element);\n      setElement(null);\n    };\n  }, []);\n\n  if (!element) {\n    return null;\n  } // ThemeProvider is added without props to carryover theme information throughout portal using context\n\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 34\n  }, this), element);\n}\n\n_s(Portal, \"x+TgOKntICvuokUctzuzSaXnzQA=\");\n\n_c = Portal;\nPortal.propTypes = {\n  /**\n   * Children element to render\n   */\n  children: PropTypes.node\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Portal\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/Portal.js"],"names":["React","useEffect","useState","ReactDOM","PropTypes","ThemeProvider","Portal","children","element","setElement","_element","document","createElement","body","appendChild","removeChild","createPortal","propTypes","node"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,OAAO,SAASC,MAAT,OAA8B;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACHL,QAAQ,EADL;AAAA,MAC1BM,OAD0B;AAAA,MACjBC,UADiB;;AAGjCR,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMS,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;;AACAH,IAAAA,UAAU,CAACC,QAAD,CAAV;AAEAC,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,QAA1B;AAEA,WAAO,YAAM;AACTC,MAAAA,QAAQ,CAACE,IAAT,CAAcE,WAAd,CAA0BL,QAA1B;AACAD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAHD;AAIH,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAI,CAACD,OAAL,EAAc;AACV,WAAO,IAAP;AACH,GAjBgC,CAmBjC;;;AACA,sBAAOL,QAAQ,CAACa,YAAT,eAAsB,QAAC,aAAD;AAAA,cAAgBT;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAtB,EAAiEC,OAAjE,CAAP;AACH;;GArBeF,M;;KAAAA,M;AAuBhBA,MAAM,CAACW,SAAP,GAAmB;AACf;AACJ;AACA;AACIV,EAAAA,QAAQ,EAAEH,SAAS,CAACc;AAJL,CAAnB","sourcesContent":["// Libs\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { ThemeProvider } from \"../layout\";\n\nexport function Portal({ children }) {\n    const [element, setElement] = useState();\n\n    useEffect(() => {\n        const _element = document.createElement(\"div\");\n        setElement(_element);\n\n        document.body.appendChild(_element);\n\n        return () => {\n            document.body.removeChild(_element);\n            setElement(null);\n        };\n    }, []);\n\n    if (!element) {\n        return null;\n    }\n\n    // ThemeProvider is added without props to carryover theme information throughout portal using context\n    return ReactDOM.createPortal(<ThemeProvider>{children}</ThemeProvider>, element);\n}\n\nPortal.propTypes = {\n    /**\n     * Children element to render\n     */\n    children: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}