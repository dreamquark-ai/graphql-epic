{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/Toast.js\";\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // Components\n\nimport { IconWrapper } from \"../icons\";\n/**\n * Type of toasts\n */\n\nexport const TOAST_TYPES = {\n  DARK: \"dark\",\n  DEFAULT: \"default\",\n  ERROR: \"error\",\n  INFO: \"info\",\n  SUCCESS: \"success\",\n  WARNING: \"warning\"\n};\n/**\n * Default icon for toasts\n */\n\nconst TOAST_ICONS = {\n  [TOAST_TYPES.ERROR]: \"error\",\n  [TOAST_TYPES.SUCCESS]: \"success\",\n  [TOAST_TYPES.WARNING]: \"warning\",\n  [TOAST_TYPES.INFO]: \"info\"\n};\nexport function Toast({\n  content,\n  options\n}) {\n  if (typeof content !== \"string\") {\n    return content;\n  }\n\n  const icon = TOAST_ICONS[options.type];\n  return /*#__PURE__*/_jsxDEV(IconWrapper, {\n    icon: icon,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\nToast.propTypes = {\n  /**\n   * Content to display\n   */\n  content: PropTypes.node,\n\n  /**\n   * Options available through toastify\n   * see: https://fkhadra.github.io/react-toastify/api/toast\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  options: PropTypes.object\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/Toast.js"],"names":["React","PropTypes","IconWrapper","TOAST_TYPES","DARK","DEFAULT","ERROR","INFO","SUCCESS","WARNING","TOAST_ICONS","Toast","content","options","icon","type","propTypes","node","object"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,OAAO,EAAE,SAFc;AAGvBC,EAAAA,KAAK,EAAE,OAHgB;AAIvBC,EAAAA,IAAI,EAAE,MAJiB;AAKvBC,EAAAA,OAAO,EAAE,SALc;AAMvBC,EAAAA,OAAO,EAAE;AANc,CAApB;AASP;AACA;AACA;;AACA,MAAMC,WAAW,GAAG;AAChB,GAACP,WAAW,CAACG,KAAb,GAAqB,OADL;AAEhB,GAACH,WAAW,CAACK,OAAb,GAAuB,SAFP;AAGhB,GAACL,WAAW,CAACM,OAAb,GAAuB,SAHP;AAIhB,GAACN,WAAW,CAACI,IAAb,GAAoB;AAJJ,CAApB;AAOA,OAAO,SAASI,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAf,EAAqC;AACxC,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,WAAOA,OAAP;AACH;;AAED,QAAME,IAAI,GAAGJ,WAAW,CAACG,OAAO,CAACE,IAAT,CAAxB;AAEA,sBACI,QAAC,WAAD;AAAa,IAAA,IAAI,EAAED,IAAnB;AAAA,2BACI;AAAA,gBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAEDD,KAAK,CAACK,SAAN,GAAkB;AACd;AACJ;AACA;AACIJ,EAAAA,OAAO,EAAEX,SAAS,CAACgB,IAJL;;AAKd;AACJ;AACA;AACA;AACI;AACAJ,EAAAA,OAAO,EAAEZ,SAAS,CAACiB;AAVL,CAAlB","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { IconWrapper } from \"../icons\";\n\n/**\n * Type of toasts\n */\nexport const TOAST_TYPES = {\n    DARK: \"dark\",\n    DEFAULT: \"default\",\n    ERROR: \"error\",\n    INFO: \"info\",\n    SUCCESS: \"success\",\n    WARNING: \"warning\",\n};\n\n/**\n * Default icon for toasts\n */\nconst TOAST_ICONS = {\n    [TOAST_TYPES.ERROR]: \"error\",\n    [TOAST_TYPES.SUCCESS]: \"success\",\n    [TOAST_TYPES.WARNING]: \"warning\",\n    [TOAST_TYPES.INFO]: \"info\",\n};\n\nexport function Toast({ content, options }) {\n    if (typeof content !== \"string\") {\n        return content;\n    }\n\n    const icon = TOAST_ICONS[options.type];\n\n    return (\n        <IconWrapper icon={icon}>\n            <span>{content}</span>\n        </IconWrapper>\n    );\n}\n\nToast.propTypes = {\n    /**\n     * Content to display\n     */\n    content: PropTypes.node,\n    /**\n     * Options available through toastify\n     * see: https://fkhadra.github.io/react-toastify/api/toast\n     */\n    // eslint-disable-next-line react/forbid-prop-types\n    options: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}