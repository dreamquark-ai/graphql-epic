{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/components/Datasets.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { ALL_DATASETS_QUERY } from '../graphql/query';\nimport Dataset from './Dataset';\nimport { perPage } from '../config';\nexport default function Datasets(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_DATASETS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }, this), \" \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.allDatasets.map(function (dataset) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Dataset, {\n          dataset: dataset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this)\n      }, dataset.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Datasets, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Datasets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datasets\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/components/Datasets.js"],"names":["useQuery","ALL_DATASETS_QUERY","Dataset","perPage","Datasets","page","variables","skip","first","data","error","loading","message","allDatasets","map","dataset","id"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,eAAe,SAASC,QAAT,OAA4B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACRL,QAAQ,CAACC,kBAAD,EAAqB;AAC5DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEF,IAAI,GAAGF,OAAP,GAAiBA,OADd;AAETK,MAAAA,KAAK,EAAEL;AAFE;AADiD,GAArB,CADA;AAAA,MACjCM,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,OADoB,aACpBA,OADoB;;AAQzC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,iCAAI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAAJ,OAAmCA,KAAK,CAACE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,cACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,0BACpB;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,eADoB;AAAA,KAArB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApBuBZ,Q;UACWJ,Q;;;KADXI,Q","sourcesContent":["import { useQuery } from '@apollo/client'\nimport { ALL_DATASETS_QUERY } from '../graphql/query'\nimport Dataset from './Dataset'\nimport { perPage } from '../config'\n\nexport default function Datasets({ page }) {\n  const { data, error, loading } = useQuery(ALL_DATASETS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage,\n    },\n  })\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p> <DisplayError error={error}/> {error.message}</p>\n\n  return (\n    <div>\n      {data.allDatasets.map((dataset) => (\n        <div key={dataset.id}>\n          <Dataset dataset={dataset} />\n        </div>\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}