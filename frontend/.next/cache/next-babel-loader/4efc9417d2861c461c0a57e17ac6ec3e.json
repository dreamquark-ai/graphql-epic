{"ast":null,"code":"import _defineProperty from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/buttons/Button.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Utils\n\nimport { wrapLabel } from \"../../_utils\"; // Components\n\nimport { IconWrapper, ICON_SIZE, ICON_POSITION } from \"../icons\";\nimport { Loader } from \"../loaders\";\nexport var BUTTON_TYPES = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  CAUTION: \"caution\"\n};\nexport { ICON_SIZE as BUTTON_ICON_SIZE, ICON_POSITION as BUTTON_ICON_POSITION };\nexport var Button = /*#__PURE__*/React.forwardRef(_c = function Button(_ref, ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$disabled = _ref.disabled,\n      disabledProp = _ref$disabled === void 0 ? false : _ref$disabled,\n      icon = _ref.icon,\n      iconClassNameProp = _ref.iconClassName,\n      _ref$iconPosition = _ref.iconPosition,\n      iconPosition = _ref$iconPosition === void 0 ? ICON_POSITION.LEFT : _ref$iconPosition,\n      iconProps = _ref.iconProps,\n      _ref$iconSize = _ref.iconSize,\n      iconSize = _ref$iconSize === void 0 ? ICON_SIZE.M : _ref$iconSize,\n      _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      label = _ref.label,\n      onClick = _ref.onClick,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? BUTTON_TYPES.PRIMARY : _ref$type,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"disabled\", \"icon\", \"iconClassName\", \"iconPosition\", \"iconProps\", \"iconSize\", \"isLoading\", \"label\", \"onClick\", \"type\"]);\n\n  var disabled = disabledProp || isLoading;\n  var buttonClassName = classnames({\n    \"brain-theme--color\": !disabled && [BUTTON_TYPES.PRIMARY, BUTTON_TYPES.CAUTION].includes(type)\n  }, \"brain-o-actionable\", \"brain-c-button\", {\n    \"brain-c-button--primary\": type === BUTTON_TYPES.PRIMARY,\n    \"brain-c-button--secondary\": type === BUTTON_TYPES.SECONDARY,\n    \"brain-c-button--caution\": type === BUTTON_TYPES.CAUTION\n  }, className);\n  var iconClassName = classnames(\"brain-c-button__icon\", iconClassNameProp);\n  var wrappedChildren = wrapLabel(label !== null && label !== void 0 ? label : children);\n  return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n    className: buttonClassName,\n    disabled: disabled === true,\n    onClick: onClick,\n    ref: ref\n  }, otherProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      className: iconClassName,\n      icon: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this) : icon,\n      position: iconPosition,\n      size: iconSize,\n      children: wrappedChildren\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Button;\nButton.displayName = \"Button\";\nButton.propTypes = {\n  /**\n   * Content of the button\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional className for the button\n   */\n  className: PropTypes.string,\n\n  /**\n   * If button is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon displayed with the button\n   */\n  icon: IconWrapper.propTypes.icon,\n\n  /**\n   * Additional className for the icon\n   */\n  iconClassName: PropTypes.string,\n\n  /**\n   * Position of the icon\n   */\n  iconPosition: IconWrapper.propTypes.position,\n\n  /**\n   * Additional props for icon\n   */\n  iconProps: PropTypes.shape(IconWrapper.propTypes),\n\n  /**\n   * Size of the icon\n   */\n  iconSize: IconWrapper.propTypes.size,\n\n  /**\n   * If is loading\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n\n  /**\n   * Click handler\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Type of button\n   */\n  type: PropTypes.oneOf(Object.values(BUTTON_TYPES))\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/buttons/Button.js"],"names":["React","PropTypes","classnames","wrapLabel","IconWrapper","ICON_SIZE","ICON_POSITION","Loader","BUTTON_TYPES","PRIMARY","SECONDARY","CAUTION","BUTTON_ICON_SIZE","BUTTON_ICON_POSITION","Button","forwardRef","ref","children","className","disabled","disabledProp","icon","iconClassNameProp","iconClassName","iconPosition","LEFT","iconProps","iconSize","M","isLoading","label","onClick","type","otherProps","buttonClassName","includes","wrappedChildren","displayName","propTypes","node","string","bool","position","shape","size","func","oneOf","Object","values"],"mappings":"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","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Utils\nimport { wrapLabel } from \"../../_utils\";\n\n// Components\nimport { IconWrapper, ICON_SIZE, ICON_POSITION } from \"../icons\";\nimport { Loader } from \"../loaders\";\n\nexport const BUTTON_TYPES = {\n    PRIMARY: \"primary\",\n    SECONDARY: \"secondary\",\n    CAUTION: \"caution\",\n};\n\nexport { ICON_SIZE as BUTTON_ICON_SIZE, ICON_POSITION as BUTTON_ICON_POSITION };\n\nexport const Button = React.forwardRef(function Button(\n    {\n        children,\n        className,\n        disabled: disabledProp = false,\n        icon,\n        iconClassName: iconClassNameProp,\n        iconPosition = ICON_POSITION.LEFT,\n        iconProps,\n        iconSize = ICON_SIZE.M,\n        isLoading = false,\n        label,\n        onClick,\n        type = BUTTON_TYPES.PRIMARY,\n        ...otherProps\n    },\n    ref\n) {\n    const disabled = disabledProp || isLoading;\n\n    const buttonClassName = classnames(\n        {\n            \"brain-theme--color\": !disabled && [BUTTON_TYPES.PRIMARY, BUTTON_TYPES.CAUTION].includes(type),\n        },\n        \"brain-o-actionable\",\n        \"brain-c-button\",\n        {\n            \"brain-c-button--primary\": type === BUTTON_TYPES.PRIMARY,\n            \"brain-c-button--secondary\": type === BUTTON_TYPES.SECONDARY,\n            \"brain-c-button--caution\": type === BUTTON_TYPES.CAUTION,\n        },\n        className\n    );\n    const iconClassName = classnames(\"brain-c-button__icon\", iconClassNameProp);\n\n    const wrappedChildren = wrapLabel(label ?? children);\n\n    return (\n        <button className={buttonClassName} disabled={disabled === true} onClick={onClick} ref={ref} {...otherProps}>\n            <IconWrapper\n                className={iconClassName}\n                icon={isLoading ? <Loader /> : icon}\n                position={iconPosition}\n                size={iconSize}\n            >\n                {wrappedChildren}\n            </IconWrapper>\n        </button>\n    );\n});\n\nButton.displayName = \"Button\";\n\nButton.propTypes = {\n    /**\n     * Content of the button\n     */\n    children: PropTypes.node,\n    /**\n     * Additional className for the button\n     */\n    className: PropTypes.string,\n    /**\n     * If button is disabled\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Icon displayed with the button\n     */\n    icon: IconWrapper.propTypes.icon,\n    /**\n     * Additional className for the icon\n     */\n    iconClassName: PropTypes.string,\n    /**\n     * Position of the icon\n     */\n    iconPosition: IconWrapper.propTypes.position,\n    /**\n     * Additional props for icon\n     */\n    iconProps: PropTypes.shape(IconWrapper.propTypes),\n    /**\n     * Size of the icon\n     */\n    iconSize: IconWrapper.propTypes.size,\n    /**\n     * If is loading\n     */\n    isLoading: PropTypes.bool,\n    /**\n     * Label of the button\n     */\n    label: PropTypes.string,\n    /**\n     * Click handler\n     */\n    onClick: PropTypes.func,\n    /**\n     * Type of button\n     */\n    type: PropTypes.oneOf(Object.values(BUTTON_TYPES)),\n};\n"]},"metadata":{},"sourceType":"module"}