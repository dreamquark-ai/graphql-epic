{"ast":null,"code":"import _objectWithoutProperties from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/layout/Header.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Libs\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Utils\n\nimport { wrapLabel } from \"../../_utils\"; // Components\n\nimport { Button, ButtonIcon, BUTTON_TYPES } from \"../buttons\";\nimport { IconWrapper, ICON_SIZE } from \"../icons\";\nimport { List, ListItem } from \"../lists\";\nimport { Dropdown } from \"../modals\";\n\nfunction renderAction(actionButtonClassName, actionButtonProps, _ref) {\n  var action = _ref.action,\n      _ref$buttonType = _ref.buttonType,\n      buttonType = _ref$buttonType === void 0 ? \"standard\" : _ref$buttonType,\n      icon = _ref.icon,\n      key = _ref.key,\n      label = _ref.label,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? BUTTON_TYPES.SECONDARY : _ref$type;\n  var ButtonComponent = buttonType === \"icon\" ? ButtonIcon : Button;\n  return /*#__PURE__*/_createElement(ButtonComponent, _objectSpread(_objectSpread({}, actionButtonProps), {}, {\n    className: actionButtonClassName,\n    icon: icon,\n    key: key !== null && key !== void 0 ? key : label,\n    onClick: action,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    },\n    __self: this\n  }), label);\n}\n\nfunction renderActionList(closeHandler, actionButtonClassName, actionButtonProps, _ref2) {\n  var action = _ref2.action,\n      icon = _ref2.icon,\n      key = _ref2.key,\n      label = _ref2.label;\n\n  var clickHandler = function clickHandler(event) {\n    closeHandler();\n    action(event);\n  };\n\n  return /*#__PURE__*/_createElement(ListItem, _objectSpread(_objectSpread({}, actionButtonProps), {}, {\n    className: actionButtonClassName,\n    key: key !== null && key !== void 0 ? key : label,\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    },\n    __self: this\n  }), /*#__PURE__*/_jsxDEV(IconWrapper, {\n    icon: icon,\n    size: ICON_SIZE.S,\n    children: wrapLabel(label)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this));\n}\n\nexport function Header(_ref3) {\n  _s();\n\n  var _ref3$actions = _ref3.actions,\n      actions = _ref3$actions === void 0 ? [] : _ref3$actions,\n      actionButtonClassNameProp = _ref3.actionButtonClassName,\n      actionButtonProps = _ref3.actionButtonProps,\n      children = _ref3.children,\n      className = _ref3.className,\n      dropdownClassNameProp = _ref3.dropdownClassName,\n      dropdownProps = _ref3.dropdownProps,\n      listClassNameProp = _ref3.listClassName,\n      listProps = _ref3.listProps,\n      moreButtonClassNameProp = _ref3.moreButtonClassName,\n      moreButtonProps = _ref3.moreButtonProps,\n      otherProps = _objectWithoutProperties(_ref3, [\"actions\", \"actionButtonClassName\", \"actionButtonProps\", \"children\", \"className\", \"dropdownClassName\", \"dropdownProps\", \"listClassName\", \"listProps\", \"moreButtonClassName\", \"moreButtonProps\"]);\n\n  var anchorRef = useRef();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var actionButtonClassName = classnames(\"brain-c-header__action-button\", actionButtonClassNameProp);\n  var dropdownClassName = classnames(\"brain-c-header__dropdown\", dropdownClassNameProp);\n  var listClassName = classnames(\"brain-c-header__list\", listClassNameProp);\n  var moreButtonClassName = classnames(\"brain-c-header__more-button\", moreButtonClassNameProp);\n  var rootClassName = classnames(\"brain-o-paper brain-o-paper--rectangular\", \"brain-c-header\", className);\n  var actionNode;\n\n  if (actions.length > 3) {\n    actionNode = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [actions.slice(0, 2).map(function (action) {\n        return renderAction(actionButtonClassName, actionButtonProps, action);\n      }), /*#__PURE__*/_jsxDEV(ButtonIcon, _objectSpread(_objectSpread({}, moreButtonProps), {}, {\n        className: moreButtonClassName,\n        onClick: function onClick() {\n          return setOpen(true);\n        },\n        ref: anchorRef,\n        type: BUTTON_TYPES.SECONDARY,\n        children: \"more-h\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, _objectSpread(_objectSpread({}, dropdownProps), {}, {\n        anchorEl: anchorRef,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        },\n        className: dropdownClassName,\n        open: open,\n        onClose: function onClose() {\n          return setOpen(false);\n        },\n        transformOrigin: {\n          vertical: \"top\",\n          horizontal: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(List, _objectSpread(_objectSpread({}, listProps), {}, {\n          className: listClassName,\n          children: actions.slice(2).map(function (action) {\n            return renderActionList(function () {\n              return setOpen(false);\n            }, actionButtonClassName, actionButtonProps, action);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    actionNode = actions.map(function (action) {\n      return renderAction(actionButtonClassName, actionButtonProps, action);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, otherProps), {}, {\n    className: rootClassName,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brain-c-header__content\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brain-c-header__actions\",\n      children: actionNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = Header;\nHeader.propTypes = {\n  /**\n   * Actions to display\n   */\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    /**\n     * Click handler\n     */\n    action: PropTypes.func,\n\n    /**\n     * Type of button\n     */\n    buttonType: PropTypes.oneOf([\"standard\", \"icon\"]),\n\n    /**\n     * Icon for action\n     */\n    icon: PropTypes.string,\n\n    /**\n     * Key for react\n     */\n    key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    /**\n     * Label for action\n     */\n    label: PropTypes.string,\n\n    /**\n     * Type of button\n     */\n    type: PropTypes.oneOf(Object.values(BUTTON_TYPES))\n  })),\n\n  /**\n   * Additional className for action buttons\n   */\n  actionButtonClassName: PropTypes.string,\n\n  /**\n   * Additional props for action buttons\n   */\n  actionButtonProps: PropTypes.shape(Button.propTypes),\n\n  /**\n   * Children (left part)\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional className\n   */\n  className: PropTypes.string,\n\n  /**\n   * Additional className for Dropdown\n   */\n  dropdownClassName: PropTypes.string,\n\n  /**\n   * Additional props for Dropdown\n   */\n  // dropdownProps: PropTypes.shape(Dropdown.propTypes), It makes it crash...\n\n  /**\n   * Additional className for List\n   */\n  listClassName: PropTypes.string,\n\n  /**\n   * Additional prop for List\n   */\n  listProps: PropTypes.shape(List.propTypes),\n\n  /**\n   * Additional className for MoreButton\n   */\n  moreButtonClassName: PropTypes.string,\n\n  /**\n   * Additional props for MoreButton\n   */\n  moreButtonProps: PropTypes.shape(ButtonIcon.propTypes)\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/layout/Header.js"],"names":["React","useRef","useState","PropTypes","classnames","wrapLabel","Button","ButtonIcon","BUTTON_TYPES","IconWrapper","ICON_SIZE","List","ListItem","Dropdown","renderAction","actionButtonClassName","actionButtonProps","action","buttonType","icon","key","label","type","SECONDARY","ButtonComponent","renderActionList","closeHandler","clickHandler","event","S","Header","actions","actionButtonClassNameProp","children","className","dropdownClassNameProp","dropdownClassName","dropdownProps","listClassNameProp","listClassName","listProps","moreButtonClassNameProp","moreButtonClassName","moreButtonProps","otherProps","anchorRef","open","setOpen","rootClassName","actionNode","length","slice","map","vertical","horizontal","propTypes","arrayOf","shape","func","oneOf","string","oneOfType","number","Object","values","node"],"mappings":"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","sourcesContent":["// Libs\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Utils\nimport { wrapLabel } from \"../../_utils\";\n\n// Components\nimport { Button, ButtonIcon, BUTTON_TYPES } from \"../buttons\";\nimport { IconWrapper, ICON_SIZE } from \"../icons\";\nimport { List, ListItem } from \"../lists\";\nimport { Dropdown } from \"../modals\";\n\nfunction renderAction(\n    actionButtonClassName,\n    actionButtonProps,\n    { action, buttonType = \"standard\", icon, key, label, type = BUTTON_TYPES.SECONDARY }\n) {\n    const ButtonComponent = buttonType === \"icon\" ? ButtonIcon : Button;\n\n    return (\n        <ButtonComponent\n            {...actionButtonProps}\n            className={actionButtonClassName}\n            icon={icon}\n            key={key ?? label}\n            onClick={action}\n            type={type}\n        >\n            {label}\n        </ButtonComponent>\n    );\n}\n\nfunction renderActionList(closeHandler, actionButtonClassName, actionButtonProps, { action, icon, key, label }) {\n    const clickHandler = (event) => {\n        closeHandler();\n        action(event);\n    };\n\n    return (\n        <ListItem {...actionButtonProps} className={actionButtonClassName} key={key ?? label} onClick={clickHandler}>\n            <IconWrapper icon={icon} size={ICON_SIZE.S}>\n                {wrapLabel(label)}\n            </IconWrapper>\n        </ListItem>\n    );\n}\n\nexport function Header({\n    actions = [],\n    actionButtonClassName: actionButtonClassNameProp,\n    actionButtonProps,\n    children,\n    className,\n    dropdownClassName: dropdownClassNameProp,\n    dropdownProps,\n    listClassName: listClassNameProp,\n    listProps,\n    moreButtonClassName: moreButtonClassNameProp,\n    moreButtonProps,\n    ...otherProps\n}) {\n    const anchorRef = useRef();\n    const [open, setOpen] = useState(false);\n\n    const actionButtonClassName = classnames(\"brain-c-header__action-button\", actionButtonClassNameProp);\n    const dropdownClassName = classnames(\"brain-c-header__dropdown\", dropdownClassNameProp);\n    const listClassName = classnames(\"brain-c-header__list\", listClassNameProp);\n    const moreButtonClassName = classnames(\"brain-c-header__more-button\", moreButtonClassNameProp);\n    const rootClassName = classnames(\"brain-o-paper brain-o-paper--rectangular\", \"brain-c-header\", className);\n\n    let actionNode;\n    if (actions.length > 3) {\n        actionNode = (\n            <>\n                {actions.slice(0, 2).map((action) => renderAction(actionButtonClassName, actionButtonProps, action))}\n                <ButtonIcon\n                    {...moreButtonProps}\n                    className={moreButtonClassName}\n                    onClick={() => setOpen(true)}\n                    ref={anchorRef}\n                    type={BUTTON_TYPES.SECONDARY}\n                >\n                    more-h\n                </ButtonIcon>\n                <Dropdown\n                    {...dropdownProps}\n                    anchorEl={anchorRef}\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                    className={dropdownClassName}\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                >\n                    <List {...listProps} className={listClassName}>\n                        {actions\n                            .slice(2)\n                            .map((action) =>\n                                renderActionList(() => setOpen(false), actionButtonClassName, actionButtonProps, action)\n                            )}\n                    </List>\n                </Dropdown>\n            </>\n        );\n    } else {\n        actionNode = actions.map((action) => renderAction(actionButtonClassName, actionButtonProps, action));\n    }\n\n    return (\n        <div {...otherProps} className={rootClassName}>\n            <div className=\"brain-c-header__content\">{children}</div>\n            <div className=\"brain-c-header__actions\">{actionNode}</div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    /**\n     * Actions to display\n     */\n    actions: PropTypes.arrayOf(\n        PropTypes.shape({\n            /**\n             * Click handler\n             */\n            action: PropTypes.func,\n            /**\n             * Type of button\n             */\n            buttonType: PropTypes.oneOf([\"standard\", \"icon\"]),\n            /**\n             * Icon for action\n             */\n            icon: PropTypes.string,\n            /**\n             * Key for react\n             */\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            /**\n             * Label for action\n             */\n            label: PropTypes.string,\n            /**\n             * Type of button\n             */\n            type: PropTypes.oneOf(Object.values(BUTTON_TYPES)),\n        })\n    ),\n    /**\n     * Additional className for action buttons\n     */\n    actionButtonClassName: PropTypes.string,\n    /**\n     * Additional props for action buttons\n     */\n    actionButtonProps: PropTypes.shape(Button.propTypes),\n    /**\n     * Children (left part)\n     */\n    children: PropTypes.node,\n    /**\n     * Additional className\n     */\n    className: PropTypes.string,\n    /**\n     * Additional className for Dropdown\n     */\n    dropdownClassName: PropTypes.string,\n    /**\n     * Additional props for Dropdown\n     */\n    // dropdownProps: PropTypes.shape(Dropdown.propTypes), It makes it crash...\n    /**\n     * Additional className for List\n     */\n    listClassName: PropTypes.string,\n    /**\n     * Additional prop for List\n     */\n    listProps: PropTypes.shape(List.propTypes),\n    /**\n     * Additional className for MoreButton\n     */\n    moreButtonClassName: PropTypes.string,\n    /**\n     * Additional props for MoreButton\n     */\n    moreButtonProps: PropTypes.shape(ButtonIcon.propTypes),\n};\n"]},"metadata":{},"sourceType":"module"}