{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/components/DeleteDataset.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from '@apollo/client';\nimport { DELETE_DATASET_MUTATION } from '../graphql/mutation';\nexport default function DeleteProduct(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var update = function update(cache, payload) {\n    cache.evict(cache.identify(payload.data.deleteDataset));\n    cache.add;\n  };\n\n  var _useMutation = useMutation(DELETE_DATASET_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!confirm('Are you sure you want to delete')) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return deleteProduct()[\"catch\"](function (err) {\n                return alert(err.message);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    disabled: loading,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteProduct, \"Ps0J/kGno/pxP02U3XEwZE1Q1Tg=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProduct\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/components/DeleteDataset.js"],"names":["useMutation","DELETE_DATASET_MUTATION","DeleteProduct","id","children","update","cache","payload","evict","identify","data","deleteDataset","add","variables","deleteProduct","loading","error","handleClick","confirm","err","alert","message"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AAEA,eAAe,SAASC,aAAT,OAAyC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACtD,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACjCD,IAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,aAA5B,CAAZ;AACAL,IAAAA,KAAK,CAACM,GAAN;AACD,GAHD;;AADsD,qBAMVZ,WAAW,CACrDC,uBADqD,EAErD;AACEY,IAAAA,SAAS,EAAE;AAAEV,MAAAA,EAAE,EAAFA;AAAF,KADb;AAEEE,IAAAA,MAAM,EAANA;AAFF,GAFqD,CAND;AAAA;AAAA,MAM/CS,aAN+C;AAAA;AAAA,MAM9BC,OAN8B,kBAM9BA,OAN8B;AAAA,MAMrBC,KANqB,kBAMrBA,KANqB;;AActD,MAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdC,OAAO,CAAC,iCAAD,CADO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEVJ,aAAa,WAAb,CAAsB,UAACK,GAAD;AAAA,uBAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,eAAtB,CAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXJ,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAMA,sBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEA,WAA/B;AAA4C,IAAA,QAAQ,EAAEF,OAAtD;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBuBF,a;UAMsBF,W;;;KANtBE,a","sourcesContent":["import { useMutation } from '@apollo/client'\nimport { DELETE_DATASET_MUTATION } from '../graphql/mutation'\n\nexport default function DeleteProduct({ id, children }) {\n  const update = (cache, payload) => {\n    cache.evict(cache.identify(payload.data.deleteDataset))\n    cache.add\n  }\n\n  const [deleteProduct, { loading, error }] = useMutation(\n    DELETE_DATASET_MUTATION,\n    {\n      variables: { id },\n      update,\n    }\n  )\n\n  const handleClick = async () => {\n    if (confirm('Are you sure you want to delete')) {\n      await deleteProduct().catch((err) => alert(err.message))\n    }\n  }\n\n  return (\n    <button type=\"button\" onClick={handleClick} disabled={loading}>\n      {children}\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}