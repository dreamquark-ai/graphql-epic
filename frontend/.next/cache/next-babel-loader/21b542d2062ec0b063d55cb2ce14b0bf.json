{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/icons/Icon.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Icons\n\nimport icons from \"./icons.json\";\nimport { alterElement } from \"../../_utils\";\nexport const ICONS = Object.keys(icons);\nexport const ICON_SIZE = {\n  XS: \"xs\",\n  S: \"s\",\n  M: \"m\",\n  L: \"l\"\n};\nexport function hasIcon(iconName) {\n  return ICONS.includes(iconName);\n}\nexport const Icon = /*#__PURE__*/React.forwardRef(function Icon(_ref, ref) {\n  let {\n    children,\n    className,\n    icon,\n    size = ICON_SIZE.M\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"icon\", \"size\"]);\n\n  const iconClassName = classnames(\"brain-c-icon\", {\n    \"brain-u-icon--XS\": size === ICON_SIZE.XS,\n    \"brain-u-icon--S\": size === ICON_SIZE.S,\n    \"brain-u-icon--M\": size === ICON_SIZE.M,\n    \"brain-u-icon--L\": size === ICON_SIZE.L\n  }, className);\n  const iconName = icon !== null && icon !== void 0 ? icon : children;\n\n  if (typeof iconName !== \"string\") {\n    return alterElement(iconName, {\n      className: iconClassName\n    });\n  }\n\n  if (!hasIcon(iconName)) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\",\n        textDecoration: \"underline\",\n        margin: \"5px\"\n      },\n      children: iconName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  const traces = icons[iconName];\n  return /*#__PURE__*/_jsxDEV(\"svg\", _objectSpread(_objectSpread({\n    className: iconClassName,\n    \"data-icon\": iconName,\n    fill: \"none\",\n    ref: ref,\n    viewBox: \"0 0 20 20\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, otherProps), {}, {\n    children: traces.map((trace, i) => /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"brain-c-icon__path\",\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: trace,\n      fill: \"currentcolor\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n});\nIcon.displayName = \"Icon\";\nIcon.propTypes = {\n  /**\n   * Icon to display\n   */\n  children: PropTypes.string,\n\n  /**\n   * Additional className for icon\n   */\n  className: PropTypes.string,\n\n  /**\n   * Icon to display\n   */\n  icon: PropTypes.string,\n\n  /**\n   * Icon size\n   */\n  size: PropTypes.oneOf(Object.values(ICON_SIZE))\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/icons/Icon.js"],"names":["React","PropTypes","classnames","icons","alterElement","ICONS","Object","keys","ICON_SIZE","XS","S","M","L","hasIcon","iconName","includes","Icon","forwardRef","ref","children","className","icon","size","otherProps","iconClassName","color","textDecoration","margin","traces","map","trace","i","displayName","propTypes","string","oneOf","values"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAO,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAd;AAEP,OAAO,MAAMK,SAAS,GAAG;AACrBC,EAAAA,EAAE,EAAE,IADiB;AAErBC,EAAAA,CAAC,EAAE,GAFkB;AAGrBC,EAAAA,CAAC,EAAE,GAHkB;AAIrBC,EAAAA,CAAC,EAAE;AAJkB,CAAlB;AAOP,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;AAC9B,SAAOT,KAAK,CAACU,QAAN,CAAeD,QAAf,CAAP;AACH;AAED,OAAO,MAAME,IAAI,gBAAGhB,KAAK,CAACiB,UAAN,CAAiB,SAASD,IAAT,OAEjCE,GAFiC,EAGnC;AAAA,MAFE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,IAAI,GAAGd,SAAS,CAACG;AAA9C,GAEF;AAAA,MAFsDY,UAEtD;;AACE,QAAMC,aAAa,GAAGtB,UAAU,CAC5B,cAD4B,EAE5B;AACI,wBAAoBoB,IAAI,KAAKd,SAAS,CAACC,EAD3C;AAEI,uBAAmBa,IAAI,KAAKd,SAAS,CAACE,CAF1C;AAGI,uBAAmBY,IAAI,KAAKd,SAAS,CAACG,CAH1C;AAII,uBAAmBW,IAAI,KAAKd,SAAS,CAACI;AAJ1C,GAF4B,EAQ5BQ,SAR4B,CAAhC;AAWA,QAAMN,QAAQ,GAAGO,IAAH,aAAGA,IAAH,cAAGA,IAAH,GAAWF,QAAzB;;AAEA,MAAI,OAAOL,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,WAAOV,YAAY,CAACU,QAAD,EAAW;AAAEM,MAAAA,SAAS,EAAEI;AAAb,KAAX,CAAnB;AACH;;AAED,MAAI,CAACX,OAAO,CAACC,QAAD,CAAZ,EAAwB;AACpB,wBAAO;AAAM,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,cAAc,EAAE,WAAhC;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAAb;AAAA,gBAA4Eb;AAA5E;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMc,MAAM,GAAGzB,KAAK,CAACW,QAAD,CAApB;AAEA,sBACI;AACI,IAAA,SAAS,EAAEU,aADf;AAEI,iBAAWV,QAFf;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,GAAG,EAAEI,GAJT;AAKI,IAAA,OAAO,EAAC,WALZ;AAMI,IAAA,KAAK,EAAC;AANV,KAOQK,UAPR;AAAA,cASKK,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBACR;AACI,MAAA,SAAS,EAAC,oBADd;AAGI,MAAA,QAAQ,EAAC,SAHb;AAII,MAAA,QAAQ,EAAC,SAJb;AAKI,MAAA,CAAC,EAAED,KALP;AAMI,MAAA,IAAI,EAAC;AANT,OAESC,CAFT;AAAA;AAAA;AAAA;AAAA,YADH;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAjDmB,CAAb;AAmDPf,IAAI,CAACgB,WAAL,GAAmB,MAAnB;AAEAhB,IAAI,CAACiB,SAAL,GAAiB;AACb;AACJ;AACA;AACId,EAAAA,QAAQ,EAAElB,SAAS,CAACiC,MAJP;;AAKb;AACJ;AACA;AACId,EAAAA,SAAS,EAAEnB,SAAS,CAACiC,MARR;;AASb;AACJ;AACA;AACIb,EAAAA,IAAI,EAAEpB,SAAS,CAACiC,MAZH;;AAab;AACJ;AACA;AACIZ,EAAAA,IAAI,EAAErB,SAAS,CAACkC,KAAV,CAAgB7B,MAAM,CAAC8B,MAAP,CAAc5B,SAAd,CAAhB;AAhBO,CAAjB","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Icons\nimport icons from \"./icons.json\";\nimport { alterElement } from \"../../_utils\";\n\nexport const ICONS = Object.keys(icons);\n\nexport const ICON_SIZE = {\n    XS: \"xs\",\n    S: \"s\",\n    M: \"m\",\n    L: \"l\",\n};\n\nexport function hasIcon(iconName) {\n    return ICONS.includes(iconName);\n}\n\nexport const Icon = React.forwardRef(function Icon(\n    { children, className, icon, size = ICON_SIZE.M, ...otherProps },\n    ref\n) {\n    const iconClassName = classnames(\n        \"brain-c-icon\",\n        {\n            \"brain-u-icon--XS\": size === ICON_SIZE.XS,\n            \"brain-u-icon--S\": size === ICON_SIZE.S,\n            \"brain-u-icon--M\": size === ICON_SIZE.M,\n            \"brain-u-icon--L\": size === ICON_SIZE.L,\n        },\n        className\n    );\n\n    const iconName = icon ?? children;\n\n    if (typeof iconName !== \"string\") {\n        return alterElement(iconName, { className: iconClassName });\n    }\n\n    if (!hasIcon(iconName)) {\n        return <span style={{ color: \"red\", textDecoration: \"underline\", margin: \"5px\" }}>{iconName}</span>;\n    }\n\n    const traces = icons[iconName];\n\n    return (\n        <svg\n            className={iconClassName}\n            data-icon={iconName}\n            fill=\"none\"\n            ref={ref}\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            {...otherProps}\n        >\n            {traces.map((trace, i) => (\n                <path\n                    className=\"brain-c-icon__path\"\n                    key={i}\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d={trace}\n                    fill=\"currentcolor\"\n                />\n            ))}\n        </svg>\n    );\n});\n\nIcon.displayName = \"Icon\";\n\nIcon.propTypes = {\n    /**\n     * Icon to display\n     */\n    children: PropTypes.string,\n    /**\n     * Additional className for icon\n     */\n    className: PropTypes.string,\n    /**\n     * Icon to display\n     */\n    icon: PropTypes.string,\n    /**\n     * Icon size\n     */\n    size: PropTypes.oneOf(Object.values(ICON_SIZE)),\n};\n"]},"metadata":{},"sourceType":"module"}