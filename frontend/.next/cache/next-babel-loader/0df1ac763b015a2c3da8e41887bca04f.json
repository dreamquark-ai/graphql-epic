{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/Tooltip.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libs\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { usePopper } from \"react-popper\"; // Utils\n\nimport { useForkRef, wrapLabel } from \"../../_utils\";\nexport const TOOLTIP_PLACEMENT = {\n  AUTO: \"auto\",\n  AUTO_START: \"auto-start\",\n  AUTO_END: \"auto-end\",\n  TOP: \"top\",\n  TOP_START: \"top-start\",\n  TOP_END: \"top-end\",\n  BOTTOM: \"bottom\",\n  BOTTOM_START: \"bottom-start\",\n  BOTTOM_END: \"bottom-end\",\n  RIGHT: \"right\",\n  RIGHT_START: \"right-start\",\n  RIGHT_END: \"right-end\",\n  LEFT: \"left\",\n  LEFT_START: \"left-start\",\n  LEFT_END: \"left-end\"\n};\nexport function Tooltip(_ref) {\n  let {\n    arrowClassName: arrowClassNameProp,\n    arrowProps,\n    children,\n    className,\n    disabled = false,\n    placement = TOOLTIP_PLACEMENT.BOTTOM,\n    tooltip,\n    tooltipClassName: tooltipClassNameProp,\n    tooltipProps\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"arrowClassName\", \"arrowProps\", \"children\", \"className\", \"disabled\", \"placement\", \"tooltip\", \"tooltipClassName\", \"tooltipProps\"]);\n\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: popperEl,\n    1: setPopperEl\n  } = useState(null);\n  const {\n    0: arrowEl,\n    1: setArrowEl\n  } = useState(null);\n  const {\n    styles,\n    attributes\n  } = usePopper(anchorEl, popperEl, {\n    placement,\n    modifiers: [{\n      name: \"flip\",\n      options: {\n        fallbackPlacements: [\"top\", \"right\", \"bottom\", \"left\"]\n      }\n    }, {\n      name: \"arrow\",\n      options: {\n        element: arrowEl,\n        padding: 10\n      }\n    }, {\n      name: \"offset\",\n      options: {\n        offset: [0, 6]\n      }\n    }]\n  });\n  const forkedRef = useForkRef(setAnchorEl, children === null || children === void 0 ? void 0 : children.props.ref);\n  const rootClassName = classnames(\"brain-c-tooltip\", className);\n  const tooltipClassName = classnames(\"brain-c-tooltip__tooltip\", tooltipClassNameProp);\n  const arrowClassName = classnames(\"brain-c-tooltip__arrow\", arrowClassNameProp);\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, otherProps), {}, {\n    className: rootClassName,\n    disabled: disabled === true,\n    children: [/*#__PURE__*/React.cloneElement(React.Children.only(children), {\n      ref: forkedRef\n    }), !disabled && /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({}, tooltipProps), {}, {\n      className: tooltipClassName,\n      ref: setPopperEl,\n      style: styles.popper\n    }, attributes.popper), {}, {\n      children: [wrapLabel(tooltip), /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, arrowProps), {}, {\n        className: arrowClassName,\n        \"data-popper-arrow\": true,\n        ref: setArrowEl,\n        style: styles.arrow\n      }, attributes.arrow), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\nTooltip.propTypes = {\n  /**\n   * Additional className for arrow\n   */\n  arrowClassName: PropTypes.string,\n\n  /**\n   * Additional props for arrow\n   */\n  arrowProps: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n\n  /**\n   * Children to anchor to\n   */\n  children: PropTypes.element,\n\n  /**\n   * Additional className\n   */\n  className: PropTypes.string,\n\n  /**\n   * If is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Placement of tooltip\n   */\n  placement: PropTypes.oneOf(Object.values(TOOLTIP_PLACEMENT)),\n\n  /**\n   * Tooltip content\n   */\n  tooltip: PropTypes.node,\n\n  /**\n   * Additional className for tooltip\n   */\n  tooltipClassName: PropTypes.string,\n\n  /**\n   * Additional props for tooltip\n   */\n  tooltipProps: PropTypes.object // eslint-disable-line react/forbid-prop-types\n\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/modals/Tooltip.js"],"names":["React","useState","PropTypes","classnames","usePopper","useForkRef","wrapLabel","TOOLTIP_PLACEMENT","AUTO","AUTO_START","AUTO_END","TOP","TOP_START","TOP_END","BOTTOM","BOTTOM_START","BOTTOM_END","RIGHT","RIGHT_START","RIGHT_END","LEFT","LEFT_START","LEFT_END","Tooltip","arrowClassName","arrowClassNameProp","arrowProps","children","className","disabled","placement","tooltip","tooltipClassName","tooltipClassNameProp","tooltipProps","otherProps","anchorEl","setAnchorEl","popperEl","setPopperEl","arrowEl","setArrowEl","styles","attributes","modifiers","name","options","fallbackPlacements","element","padding","offset","forkedRef","props","ref","rootClassName","cloneElement","Children","only","popper","arrow","propTypes","string","object","bool","oneOf","Object","values","node"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AAEA,OAAO,MAAMC,iBAAiB,GAAG;AAC7BC,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,UAAU,EAAE,YAFiB;AAG7BC,EAAAA,QAAQ,EAAE,UAHmB;AAI7BC,EAAAA,GAAG,EAAE,KAJwB;AAK7BC,EAAAA,SAAS,EAAE,WALkB;AAM7BC,EAAAA,OAAO,EAAE,SANoB;AAO7BC,EAAAA,MAAM,EAAE,QAPqB;AAQ7BC,EAAAA,YAAY,EAAE,cARe;AAS7BC,EAAAA,UAAU,EAAE,YATiB;AAU7BC,EAAAA,KAAK,EAAE,OAVsB;AAW7BC,EAAAA,WAAW,EAAE,aAXgB;AAY7BC,EAAAA,SAAS,EAAE,WAZkB;AAa7BC,EAAAA,IAAI,EAAE,MAbuB;AAc7BC,EAAAA,UAAU,EAAE,YAdiB;AAe7BC,EAAAA,QAAQ,EAAE;AAfmB,CAA1B;AAkBP,OAAO,SAASC,OAAT,OAWJ;AAAA,MAXqB;AACpBC,IAAAA,cAAc,EAAEC,kBADI;AAEpBC,IAAAA,UAFoB;AAGpBC,IAAAA,QAHoB;AAIpBC,IAAAA,SAJoB;AAKpBC,IAAAA,QAAQ,GAAG,KALS;AAMpBC,IAAAA,SAAS,GAAGvB,iBAAiB,CAACO,MANV;AAOpBiB,IAAAA,OAPoB;AAQpBC,IAAAA,gBAAgB,EAAEC,oBARE;AASpBC,IAAAA;AAToB,GAWrB;AAAA,MADIC,UACJ;;AACC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BpC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACqC,QAAD;AAAA,OAAWC;AAAX,MAA0BtC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACuC,OAAD;AAAA,OAAUC;AAAV,MAAwBxC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEyC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyBvC,SAAS,CAACgC,QAAD,EAAWE,QAAX,EAAqB;AACzDR,IAAAA,SADyD;AAEzDc,IAAAA,SAAS,EAAE,CACP;AACIC,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,OAAO,EAAE;AACLC,QAAAA,kBAAkB,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B;AADf;AAFb,KADO,EAOP;AAAEF,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAAEE,QAAAA,OAAO,EAAER,OAAX;AAAoBS,QAAAA,OAAO,EAAE;AAA7B;AAA1B,KAPO,EAQP;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,OAAO,EAAE;AACLI,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AADH;AAFb,KARO;AAF8C,GAArB,CAAxC;AAmBA,QAAMC,SAAS,GAAG9C,UAAU,CAACgC,WAAD,EAAcV,QAAd,aAAcA,QAAd,uBAAcA,QAAQ,CAAEyB,KAAV,CAAgBC,GAA9B,CAA5B;AAEA,QAAMC,aAAa,GAAGnD,UAAU,CAAC,iBAAD,EAAoByB,SAApB,CAAhC;AACA,QAAMI,gBAAgB,GAAG7B,UAAU,CAAC,0BAAD,EAA6B8B,oBAA7B,CAAnC;AACA,QAAMT,cAAc,GAAGrB,UAAU,CAAC,wBAAD,EAA2BsB,kBAA3B,CAAjC;AAEA,sBACI,+CAASU,UAAT;AAAqB,IAAA,SAAS,EAAEmB,aAAhC;AAA+C,IAAA,QAAQ,EAAEzB,QAAQ,KAAK,IAAtE;AAAA,4BACK7B,KAAK,CAACuD,YAAN,CAAmBvD,KAAK,CAACwD,QAAN,CAAeC,IAAf,CAAoB9B,QAApB,CAAnB,EAAkD;AAC/C0B,MAAAA,GAAG,EAAEF;AAD0C,KAAlD,CADL,EAKK,CAACtB,QAAD,iBACG,6DACQK,YADR;AAEI,MAAA,SAAS,EAAEF,gBAFf;AAGI,MAAA,GAAG,EAAEO,WAHT;AAII,MAAA,KAAK,EAAEG,MAAM,CAACgB;AAJlB,OAKQf,UAAU,CAACe,MALnB;AAAA,iBAOKpD,SAAS,CAACyB,OAAD,CAPd,eAQI,+CACQL,UADR;AAEI,QAAA,SAAS,EAAEF,cAFf;AAGI,iCAHJ;AAII,QAAA,GAAG,EAAEiB,UAJT;AAKI,QAAA,KAAK,EAAEC,MAAM,CAACiB;AALlB,SAMQhB,UAAU,CAACgB,KANnB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;AAEDpC,OAAO,CAACqC,SAAR,GAAoB;AAChB;AACJ;AACA;AACIpC,EAAAA,cAAc,EAAEtB,SAAS,CAAC2D,MAJV;;AAKhB;AACJ;AACA;AACInC,EAAAA,UAAU,EAAExB,SAAS,CAAC4D,MARN;AAQc;;AAC9B;AACJ;AACA;AACInC,EAAAA,QAAQ,EAAEzB,SAAS,CAAC8C,OAZJ;;AAahB;AACJ;AACA;AACIpB,EAAAA,SAAS,EAAE1B,SAAS,CAAC2D,MAhBL;;AAiBhB;AACJ;AACA;AACIhC,EAAAA,QAAQ,EAAE3B,SAAS,CAAC6D,IApBJ;;AAqBhB;AACJ;AACA;AACIjC,EAAAA,SAAS,EAAE5B,SAAS,CAAC8D,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAc3D,iBAAd,CAAhB,CAxBK;;AAyBhB;AACJ;AACA;AACIwB,EAAAA,OAAO,EAAE7B,SAAS,CAACiE,IA5BH;;AA6BhB;AACJ;AACA;AACInC,EAAAA,gBAAgB,EAAE9B,SAAS,CAAC2D,MAhCZ;;AAiChB;AACJ;AACA;AACI3B,EAAAA,YAAY,EAAEhC,SAAS,CAAC4D,MApCR,CAoCgB;;AApChB,CAApB","sourcesContent":["// Libs\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { usePopper } from \"react-popper\";\n\n// Utils\nimport { useForkRef, wrapLabel } from \"../../_utils\";\n\nexport const TOOLTIP_PLACEMENT = {\n    AUTO: \"auto\",\n    AUTO_START: \"auto-start\",\n    AUTO_END: \"auto-end\",\n    TOP: \"top\",\n    TOP_START: \"top-start\",\n    TOP_END: \"top-end\",\n    BOTTOM: \"bottom\",\n    BOTTOM_START: \"bottom-start\",\n    BOTTOM_END: \"bottom-end\",\n    RIGHT: \"right\",\n    RIGHT_START: \"right-start\",\n    RIGHT_END: \"right-end\",\n    LEFT: \"left\",\n    LEFT_START: \"left-start\",\n    LEFT_END: \"left-end\",\n};\n\nexport function Tooltip({\n    arrowClassName: arrowClassNameProp,\n    arrowProps,\n    children,\n    className,\n    disabled = false,\n    placement = TOOLTIP_PLACEMENT.BOTTOM,\n    tooltip,\n    tooltipClassName: tooltipClassNameProp,\n    tooltipProps,\n    ...otherProps\n}) {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [popperEl, setPopperEl] = useState(null);\n    const [arrowEl, setArrowEl] = useState(null);\n    const { styles, attributes } = usePopper(anchorEl, popperEl, {\n        placement,\n        modifiers: [\n            {\n                name: \"flip\",\n                options: {\n                    fallbackPlacements: [\"top\", \"right\", \"bottom\", \"left\"],\n                },\n            },\n            { name: \"arrow\", options: { element: arrowEl, padding: 10 } },\n            {\n                name: \"offset\",\n                options: {\n                    offset: [0, 6],\n                },\n            },\n        ],\n    });\n\n    const forkedRef = useForkRef(setAnchorEl, children?.props.ref);\n\n    const rootClassName = classnames(\"brain-c-tooltip\", className);\n    const tooltipClassName = classnames(\"brain-c-tooltip__tooltip\", tooltipClassNameProp);\n    const arrowClassName = classnames(\"brain-c-tooltip__arrow\", arrowClassNameProp);\n\n    return (\n        <div {...otherProps} className={rootClassName} disabled={disabled === true}>\n            {React.cloneElement(React.Children.only(children), {\n                ref: forkedRef,\n            })}\n\n            {!disabled && (\n                <div\n                    {...tooltipProps}\n                    className={tooltipClassName}\n                    ref={setPopperEl}\n                    style={styles.popper}\n                    {...attributes.popper}\n                >\n                    {wrapLabel(tooltip)}\n                    <div\n                        {...arrowProps}\n                        className={arrowClassName}\n                        data-popper-arrow\n                        ref={setArrowEl}\n                        style={styles.arrow}\n                        {...attributes.arrow}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nTooltip.propTypes = {\n    /**\n     * Additional className for arrow\n     */\n    arrowClassName: PropTypes.string,\n    /**\n     * Additional props for arrow\n     */\n    arrowProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    /**\n     * Children to anchor to\n     */\n    children: PropTypes.element,\n    /**\n     * Additional className\n     */\n    className: PropTypes.string,\n    /**\n     * If is disabled\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Placement of tooltip\n     */\n    placement: PropTypes.oneOf(Object.values(TOOLTIP_PLACEMENT)),\n    /**\n     * Tooltip content\n     */\n    tooltip: PropTypes.node,\n    /**\n     * Additional className for tooltip\n     */\n    tooltipClassName: PropTypes.string,\n    /**\n     * Additional props for tooltip\n     */\n    tooltipProps: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n};\n"]},"metadata":{},"sourceType":"module"}