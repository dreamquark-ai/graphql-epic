{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/displays/DisplayResource.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Utils\n\nimport { wrapLabel } from \"../../_utils\"; // Components\n\nimport { IconWrapper, ICON_POSITION } from \"../icons\";\nexport const DISPLAY_RESOURCE_STATUS = {\n  INFO: \"info\",\n  SUCCESS: \"success\",\n  WARNING: \"warning\",\n  ERROR: \"error\"\n};\nexport function DisplayResource(_ref) {\n  let {\n    className,\n    disabled = false,\n    helper,\n    icon,\n    label,\n    status\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"className\", \"disabled\", \"helper\", \"icon\", \"label\", \"status\"]);\n\n  const rootClassName = classnames(\"brain-c-display-resource\", {\n    [`brain-u-status--${status}`]: !disabled && status\n  }, className);\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, otherProps), {}, {\n    className: rootClassName,\n    disabled: disabled === true,\n    children: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      icon: icon,\n      position: ICON_POSITION.LEFT,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [label && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brain-c-display-resource__label\",\n          children: wrapLabel(label)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 31\n        }, this), helper && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brain-c-display-resource__helper\",\n          children: wrapLabel(helper)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\nDisplayResource.propTypes = {\n  /**\n   * Additional className\n   */\n  className: PropTypes.string,\n\n  /**\n   * If is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Helper text\n   */\n  helper: PropTypes.string,\n\n  /**\n   * Icon\n   */\n  icon: IconWrapper.propTypes.icon,\n\n  /**\n   * Label\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Optional status\n   */\n  status: PropTypes.oneOf(Object.values(DISPLAY_RESOURCE_STATUS))\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/displays/DisplayResource.js"],"names":["React","PropTypes","classnames","wrapLabel","IconWrapper","ICON_POSITION","DISPLAY_RESOURCE_STATUS","INFO","SUCCESS","WARNING","ERROR","DisplayResource","className","disabled","helper","icon","label","status","otherProps","rootClassName","LEFT","propTypes","string","bool","isRequired","oneOf","Object","values"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,UAA3C;AAEA,OAAO,MAAMC,uBAAuB,GAAG;AACnCC,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,OAAO,EAAE,SAF0B;AAGnCC,EAAAA,OAAO,EAAE,SAH0B;AAInCC,EAAAA,KAAK,EAAE;AAJ4B,CAAhC;AAOP,OAAO,SAASC,eAAT,OAAsG;AAAA,MAA7E;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAQ,GAAG,KAAxB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA,IAAvC;AAA6CC,IAAAA,KAA7C;AAAoDC,IAAAA;AAApD,GAA6E;AAAA,MAAdC,UAAc;;AACzG,QAAMC,aAAa,GAAGjB,UAAU,CAC5B,0BAD4B,EAE5B;AACI,KAAE,mBAAkBe,MAAO,EAA3B,GAA+B,CAACJ,QAAD,IAAaI;AADhD,GAF4B,EAK5BL,SAL4B,CAAhC;AAOA,sBACI,+CAASM,UAAT;AAAqB,IAAA,SAAS,EAAEC,aAAhC;AAA+C,IAAA,QAAQ,EAAEN,QAAQ,KAAK,IAAtE;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEE,IAAnB;AAAyB,MAAA,QAAQ,EAAEV,aAAa,CAACe,IAAjD;AAAA,6BACI;AAAA,mBACKJ,KAAK,iBAAI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,oBAAkDb,SAAS,CAACa,KAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADd,EAEKF,MAAM,iBAAI;AAAK,UAAA,SAAS,EAAC,kCAAf;AAAA,oBAAmDX,SAAS,CAACW,MAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;AAEDH,eAAe,CAACU,SAAhB,GAA4B;AACxB;AACJ;AACA;AACIT,EAAAA,SAAS,EAAEX,SAAS,CAACqB,MAJG;;AAKxB;AACJ;AACA;AACIT,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB,IARI;;AASxB;AACJ;AACA;AACIT,EAAAA,MAAM,EAAEb,SAAS,CAACqB,MAZM;;AAaxB;AACJ;AACA;AACIP,EAAAA,IAAI,EAAEX,WAAW,CAACiB,SAAZ,CAAsBN,IAhBJ;;AAiBxB;AACJ;AACA;AACIC,EAAAA,KAAK,EAAEf,SAAS,CAACqB,MAAV,CAAiBE,UApBA;;AAqBxB;AACJ;AACA;AACIP,EAAAA,MAAM,EAAEhB,SAAS,CAACwB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAcrB,uBAAd,CAAhB;AAxBgB,CAA5B","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Utils\nimport { wrapLabel } from \"../../_utils\";\n\n// Components\nimport { IconWrapper, ICON_POSITION } from \"../icons\";\n\nexport const DISPLAY_RESOURCE_STATUS = {\n    INFO: \"info\",\n    SUCCESS: \"success\",\n    WARNING: \"warning\",\n    ERROR: \"error\",\n};\n\nexport function DisplayResource({ className, disabled = false, helper, icon, label, status, ...otherProps }) {\n    const rootClassName = classnames(\n        \"brain-c-display-resource\",\n        {\n            [`brain-u-status--${status}`]: !disabled && status,\n        },\n        className\n    );\n    return (\n        <div {...otherProps} className={rootClassName} disabled={disabled === true}>\n            <IconWrapper icon={icon} position={ICON_POSITION.LEFT}>\n                <div>\n                    {label && <div className=\"brain-c-display-resource__label\">{wrapLabel(label)}</div>}\n                    {helper && <div className=\"brain-c-display-resource__helper\">{wrapLabel(helper)}</div>}\n                </div>\n            </IconWrapper>\n        </div>\n    );\n}\n\nDisplayResource.propTypes = {\n    /**\n     * Additional className\n     */\n    className: PropTypes.string,\n    /**\n     * If is disabled\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Helper text\n     */\n    helper: PropTypes.string,\n    /**\n     * Icon\n     */\n    icon: IconWrapper.propTypes.icon,\n    /**\n     * Label\n     */\n    label: PropTypes.string.isRequired,\n    /**\n     * Optional status\n     */\n    status: PropTypes.oneOf(Object.values(DISPLAY_RESOURCE_STATUS)),\n};\n"]},"metadata":{},"sourceType":"module"}