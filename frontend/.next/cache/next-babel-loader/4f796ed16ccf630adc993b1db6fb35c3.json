{"ast":null,"code":"import _defineProperty from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/layout/ThemeContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Libs\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nvar ThemeContext = /*#__PURE__*/React.createContext({});\nexport var THEME = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n  COLOR: \"color\"\n};\nexport function useTheme() {\n  _s();\n\n  return useContext(ThemeContext);\n}\n\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ThemeProvider(_ref) {\n  _s2();\n\n  var _ref2;\n\n  var children = _ref.children,\n      className = _ref.className,\n      themeProp = _ref.theme,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"theme\"]);\n\n  var _useTheme = useTheme(),\n      themeContext = _useTheme.theme;\n\n  var theme = (_ref2 = themeProp !== null && themeProp !== void 0 ? themeProp : themeContext) !== null && _ref2 !== void 0 ? _ref2 : THEME.LIGHT;\n  var rootClassName = classnames({\n    \"brain-theme--light\": theme === THEME.LIGHT,\n    \"brain-theme--dark\": theme === THEME.DARK,\n    \"brain-theme--color\": theme === THEME.COLOR\n  }, className);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, otherProps), {}, {\n      className: rootClassName,\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ThemeProvider, \"XLGP3QPkIdRMKC3arlYPB07X0vs=\", false, function () {\n  return [useTheme];\n});\n\n_c = ThemeProvider;\nThemeProvider.propTypes = {\n  /**\n   * Children to display\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional className for Theme\n   */\n  className: PropTypes.string,\n\n  /**\n   * Theme value\n   */\n  theme: PropTypes.oneOf(Object.values(THEME))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/layout/ThemeContext.js"],"names":["React","useContext","PropTypes","classnames","ThemeContext","createContext","THEME","LIGHT","DARK","COLOR","useTheme","ThemeProvider","children","className","themeProp","theme","otherProps","themeContext","rootClassName","propTypes","node","string","oneOf","Object","values"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAArB;AAEA,OAAO,IAAMC,KAAK,GAAG;AACjBC,EAAAA,KAAK,EAAE,OADU;AAEjBC,EAAAA,IAAI,EAAE,MAFW;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAd;AAMP,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,SAAOT,UAAU,CAACG,YAAD,CAAjB;AACH;;GAFeM,Q;;AAIhB,OAAO,SAASC,aAAT,OAAiF;AAAA;;AAAA;;AAAA,MAAxDC,QAAwD,QAAxDA,QAAwD;AAAA,MAA9CC,SAA8C,QAA9CA,SAA8C;AAAA,MAA5BC,SAA4B,QAAnCC,KAAmC;AAAA,MAAdC,UAAc;;AAAA,kBACpDN,QAAQ,EAD4C;AAAA,MACrEO,YADqE,aAC5EF,KAD4E;;AAGpF,MAAMA,KAAK,YAAGD,SAAH,aAAGA,SAAH,cAAGA,SAAH,GAAgBG,YAAhB,yCAAgCX,KAAK,CAACC,KAAjD;AAEA,MAAMW,aAAa,GAAGf,UAAU,CAC5B;AACI,0BAAsBY,KAAK,KAAKT,KAAK,CAACC,KAD1C;AAEI,yBAAqBQ,KAAK,KAAKT,KAAK,CAACE,IAFzC;AAGI,0BAAsBO,KAAK,KAAKT,KAAK,CAACG;AAH1C,GAD4B,EAM5BI,SAN4B,CAAhC;AASA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAALA;AAAF,KAA9B;AAAA,2BACI,+CAASC,UAAT;AAAqB,MAAA,SAAS,EAAEE,aAAhC;AAAA,gBACKN;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IArBeD,a;UACoBD,Q;;;KADpBC,a;AAuBhBA,aAAa,CAACQ,SAAd,GAA0B;AACtB;AACJ;AACA;AACIP,EAAAA,QAAQ,EAAEV,SAAS,CAACkB,IAJE;;AAKtB;AACJ;AACA;AACIP,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MARC;;AAStB;AACJ;AACA;AACIN,EAAAA,KAAK,EAAEb,SAAS,CAACoB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAclB,KAAd,CAAhB;AAZe,CAA1B","sourcesContent":["// Libs\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst ThemeContext = React.createContext({});\n\nexport const THEME = {\n    LIGHT: \"light\",\n    DARK: \"dark\",\n    COLOR: \"color\",\n};\n\nexport function useTheme() {\n    return useContext(ThemeContext);\n}\n\nexport function ThemeProvider({ children, className, theme: themeProp, ...otherProps }) {\n    const { theme: themeContext } = useTheme();\n\n    const theme = themeProp ?? themeContext ?? THEME.LIGHT;\n\n    const rootClassName = classnames(\n        {\n            \"brain-theme--light\": theme === THEME.LIGHT,\n            \"brain-theme--dark\": theme === THEME.DARK,\n            \"brain-theme--color\": theme === THEME.COLOR,\n        },\n        className\n    );\n\n    return (\n        <ThemeContext.Provider value={{ theme }}>\n            <div {...otherProps} className={rootClassName}>\n                {children}\n            </div>\n        </ThemeContext.Provider>\n    );\n}\n\nThemeProvider.propTypes = {\n    /**\n     * Children to display\n     */\n    children: PropTypes.node,\n    /**\n     * Additional className for Theme\n     */\n    className: PropTypes.string,\n    /**\n     * Theme value\n     */\n    theme: PropTypes.oneOf(Object.values(THEME)),\n};\n"]},"metadata":{},"sourceType":"module"}