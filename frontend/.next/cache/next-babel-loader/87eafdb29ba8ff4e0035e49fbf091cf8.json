{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/components/DatasetDetails.js\";\nimport { useQuery } from '@apollo/client';\nimport Head from 'next/head';\nimport { SINGLE_DATASET_QUERY } from '../graphql/query';\nimport DisplayError from './ErrorMessage';\nexport default function DatasetDetails({\n  id\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_DATASET_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n  const {\n    Dataset\n  } = data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Dream quark | \", Dataset.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Dataset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Dataset.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/components/DatasetDetails.js"],"names":["useQuery","Head","SINGLE_DATASET_QUERY","DisplayError","DatasetDetails","id","data","error","loading","variables","Dataset","name","description"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAgC;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BR,QAAQ,CAACE,oBAAD,EAAuB;AAC9DO,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AADmD,GAAvB,CAAzC;AAKA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EACE,oBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKF,QAAM;AAAEG,IAAAA;AAAF,MAAcJ,IAApB;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,qCAAsBI,OAAO,CAACC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKD,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD","sourcesContent":["import { useQuery } from '@apollo/client'\nimport Head from 'next/head'\nimport { SINGLE_DATASET_QUERY } from '../graphql/query'\nimport DisplayError from './ErrorMessage'\n\nexport default function DatasetDetails({ id }) {\n  const { data, error, loading } = useQuery(SINGLE_DATASET_QUERY, {\n    variables: {\n      id,\n    },\n  })\n  if (loading) return <p>Loading...</p>\n  if (error)\n    return (\n      <p>\n        <DisplayError error={error} />\n      </p>\n    )\n  const { Dataset } = data\n  return (\n    <>\n      <Head>\n        <title>Dream quark | {Dataset.name}</title>\n      </Head>\n      <div className=\"details\">\n        <h2>{Dataset.name}</h2>\n        <p>{Dataset.description}</p>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}