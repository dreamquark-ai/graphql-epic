{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/displays/DisplayContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Components\n\nimport { Display, DISPLAY_TYPES } from \"./Display\";\nimport { DisplayContext, useDisplay } from \"./DisplayContext\";\nexport const DISPLAY_CONTAINER_ORIENTATION = {\n  HORIZONTAL: \"horizontal\",\n  VERTICAL: \"vertical\"\n};\nexport function DisplayContainer(_ref) {\n  let {\n    children,\n    className,\n    orientation = DISPLAY_CONTAINER_ORIENTATION.VERTICAL,\n    displayType: displayTypeProp\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"orientation\", \"displayType\"]);\n\n  const containerClassName = classnames(\"brain-c-display-container\", {\n    \"brain-c-display-container--horizontal\": orientation === DISPLAY_CONTAINER_ORIENTATION.HORIZONTAL,\n    \"brain-c-display-container--vertical\": orientation === DISPLAY_CONTAINER_ORIENTATION.VERTICAL\n  }, className);\n  const {\n    type: displayTypeContext\n  } = useDisplay();\n  const displayType = displayTypeProp !== null && displayTypeProp !== void 0 ? displayTypeProp : displayTypeContext;\n  return /*#__PURE__*/_jsxDEV(DisplayContext.Provider, {\n    value: {\n      type: displayType\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n      className: containerClassName\n    }, otherProps), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\nDisplayContainer.propTypes = {\n  /**\n   * Display for nested displays\n   */\n  displayType: PropTypes.oneOf(Object.values(DISPLAY_TYPES)),\n\n  /**\n   * Children displays\n   */\n  children: PropTypes.arrayOf(Display),\n\n  /**\n   * Additional className for container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Orientation for container\n   */\n  orientation: PropTypes.oneOf(Object.values(DISPLAY_CONTAINER_ORIENTATION))\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/displays/DisplayContainer.js"],"names":["React","PropTypes","classnames","Display","DISPLAY_TYPES","DisplayContext","useDisplay","DISPLAY_CONTAINER_ORIENTATION","HORIZONTAL","VERTICAL","DisplayContainer","children","className","orientation","displayType","displayTypeProp","otherProps","containerClassName","type","displayTypeContext","propTypes","oneOf","Object","values","arrayOf","string"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,WAAvC;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,kBAA3C;AAEA,OAAO,MAAMC,6BAA6B,GAAG;AACzCC,EAAAA,UAAU,EAAE,YAD6B;AAEzCC,EAAAA,QAAQ,EAAE;AAF+B,CAAtC;AAKP,OAAO,SAASC,gBAAT,OAMJ;AAAA,MAN8B;AAC7BC,IAAAA,QAD6B;AAE7BC,IAAAA,SAF6B;AAG7BC,IAAAA,WAAW,GAAGN,6BAA6B,CAACE,QAHf;AAI7BK,IAAAA,WAAW,EAAEC;AAJgB,GAM9B;AAAA,MADIC,UACJ;;AACC,QAAMC,kBAAkB,GAAGf,UAAU,CACjC,2BADiC,EAEjC;AACI,6CAAyCW,WAAW,KAAKN,6BAA6B,CAACC,UAD3F;AAEI,2CAAuCK,WAAW,KAAKN,6BAA6B,CAACE;AAFzF,GAFiC,EAMjCG,SANiC,CAArC;AASA,QAAM;AAAEM,IAAAA,IAAI,EAAEC;AAAR,MAA+Bb,UAAU,EAA/C;AACA,QAAMQ,WAAW,GAAGC,eAAH,aAAGA,eAAH,cAAGA,eAAH,GAAsBI,kBAAvC;AAEA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAEJ;AAAR,KAAhC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEG;AAAhB,OAAwCD,UAAxC;AAAA,gBACKL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;AAEDD,gBAAgB,CAACU,SAAjB,GAA6B;AACzB;AACJ;AACA;AACIN,EAAAA,WAAW,EAAEb,SAAS,CAACoB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAcnB,aAAd,CAAhB,CAJY;;AAKzB;AACJ;AACA;AACIO,EAAAA,QAAQ,EAAEV,SAAS,CAACuB,OAAV,CAAkBrB,OAAlB,CARe;;AASzB;AACJ;AACA;AACIS,EAAAA,SAAS,EAAEX,SAAS,CAACwB,MAZI;;AAazB;AACJ;AACA;AACIZ,EAAAA,WAAW,EAAEZ,SAAS,CAACoB,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAchB,6BAAd,CAAhB;AAhBY,CAA7B","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Components\nimport { Display, DISPLAY_TYPES } from \"./Display\";\nimport { DisplayContext, useDisplay } from \"./DisplayContext\";\n\nexport const DISPLAY_CONTAINER_ORIENTATION = {\n    HORIZONTAL: \"horizontal\",\n    VERTICAL: \"vertical\",\n};\n\nexport function DisplayContainer({\n    children,\n    className,\n    orientation = DISPLAY_CONTAINER_ORIENTATION.VERTICAL,\n    displayType: displayTypeProp,\n    ...otherProps\n}) {\n    const containerClassName = classnames(\n        \"brain-c-display-container\",\n        {\n            \"brain-c-display-container--horizontal\": orientation === DISPLAY_CONTAINER_ORIENTATION.HORIZONTAL,\n            \"brain-c-display-container--vertical\": orientation === DISPLAY_CONTAINER_ORIENTATION.VERTICAL,\n        },\n        className\n    );\n\n    const { type: displayTypeContext } = useDisplay();\n    const displayType = displayTypeProp ?? displayTypeContext;\n\n    return (\n        <DisplayContext.Provider value={{ type: displayType }}>\n            <div className={containerClassName} {...otherProps}>\n                {children}\n            </div>\n        </DisplayContext.Provider>\n    );\n}\n\nDisplayContainer.propTypes = {\n    /**\n     * Display for nested displays\n     */\n    displayType: PropTypes.oneOf(Object.values(DISPLAY_TYPES)),\n    /**\n     * Children displays\n     */\n    children: PropTypes.arrayOf(Display),\n    /**\n     * Additional className for container\n     */\n    className: PropTypes.string,\n    /**\n     * Orientation for container\n     */\n    orientation: PropTypes.oneOf(Object.values(DISPLAY_CONTAINER_ORIENTATION)),\n};\n"]},"metadata":{},"sourceType":"module"}