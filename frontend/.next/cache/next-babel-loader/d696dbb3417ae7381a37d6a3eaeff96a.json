{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n/**\n * When you need to have a ref in to place, fork it\n * @param {React.MutableRefObject} refA\n * @param {React.MutableRefObject} refB\n */\n\n\nexport function useForkRef(refA, refB) {\n  _s();\n\n  return useMemo(function () {\n    if (refA === null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}\n\n_s(useForkRef, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\nexport function useFocus(disabled, onFocus) {\n  _s2();\n\n  var _useState = useState(false),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _handleFocus = useCallback(function (event) {\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    setFocus(true);\n  }, [disabled, onFocus, setFocus]);\n\n  return {\n    focus: focus,\n    setFocus: setFocus,\n    _handleFocus: _handleFocus\n  };\n}\n\n_s2(useFocus, \"KbMZvKZzTQPZnNNh/SyV9fwDTXk=\");\n\nexport function useFocusAndBlur(disabled, onFocus, onBlur) {\n  _s3();\n\n  var _useFocus = useFocus(disabled, onFocus),\n      focus = _useFocus.focus,\n      setFocus = _useFocus.setFocus,\n      _handleFocus = _useFocus._handleFocus;\n\n  var _handleBlur = useCallback(function (event) {\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    setFocus(false);\n  }, [disabled, onBlur, setFocus]);\n\n  return {\n    focus: focus,\n    setFocus: setFocus,\n    _handleFocus: _handleFocus,\n    _handleBlur: _handleBlur\n  };\n}\n\n_s3(useFocusAndBlur, \"EyjmrBpoEp/Q2VZOTwa9cskNgis=\", false, function () {\n  return [useFocus];\n});\n\nexport function useIsMounted() {\n  _s4();\n\n  var isMounted = useRef(false);\n  useEffect(function () {\n    isMounted.current = true;\n  }, []);\n  return isMounted;\n}\n\n_s4(useIsMounted, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/_utils/hooks.js"],"names":["useCallback","useEffect","useMemo","useRef","useState","setRef","ref","value","current","useForkRef","refA","refB","refValue","useFocus","disabled","onFocus","focus","setFocus","_handleFocus","event","stopPropagation","useFocusAndBlur","onBlur","_handleBlur","useIsMounted","isMounted"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\n\n/**\n * When you need to have a ref in to place, fork it\n * @param {React.MutableRefObject} refA\n * @param {React.MutableRefObject} refB\n */\nexport function useForkRef(refA, refB) {\n    return useMemo(() => {\n        if (refA === null && refB == null) {\n            return null;\n        }\n\n        return (refValue) => {\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        };\n    }, [refA, refB]);\n}\n\nexport function useFocus(disabled, onFocus) {\n    const [focus, setFocus] = useState(false);\n\n    const _handleFocus = useCallback(\n        (event) => {\n            if (disabled) {\n                event.stopPropagation();\n                return;\n            }\n\n            if (onFocus) {\n                onFocus(event);\n            }\n\n            setFocus(true);\n        },\n        [disabled, onFocus, setFocus]\n    );\n\n    return { focus, setFocus, _handleFocus };\n}\n\nexport function useFocusAndBlur(disabled, onFocus, onBlur) {\n    const { focus, setFocus, _handleFocus } = useFocus(disabled, onFocus);\n\n    const _handleBlur = useCallback(\n        (event) => {\n            if (disabled) {\n                event.stopPropagation();\n                return;\n            }\n\n            if (onBlur) {\n                onBlur(event);\n            }\n\n            setFocus(false);\n        },\n        [disabled, onBlur, setFocus]\n    );\n\n    return { focus, setFocus, _handleFocus, _handleBlur };\n}\n\nexport function useIsMounted() {\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n        isMounted.current = true;\n    }, []);\n\n    return isMounted;\n}"]},"metadata":{},"sourceType":"module"}