{"ast":null,"code":"// Follow https://material.io/design/motion/speed.html#easing\n// to learn when use what timing\nexport const DURATION = {\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n}; // Follow https://material.io/design/motion/speed.html#easing\n// to learn the context in which each easing should be used.\n\nexport const EASING = {\n  // This is the most common easing curve.\n  easeInOut: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: \"cubic-bezier(0.0, 0, 0.2, 1)\",\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: \"cubic-bezier(0.4, 0, 1, 1)\",\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: \"cubic-bezier(0.4, 0, 0.6, 1)\"\n};\n\nfunction formatMs(ms) {\n  return `${Math.round(ms)}ms`;\n}\n\nfunction msify(ms) {\n  return typeof ms === \"string\" ? ms : formatMs(ms);\n}\n\nexport function createAnimation(animatedProperties = [\"all\"], options = {}) {\n  const {\n    duration = DURATION.standard,\n    easing = EASING.easeInOut,\n    delay = 0\n  } = options;\n  return (Array.isArray(animatedProperties) ? animatedProperties : [animatedProperties]).map(animatedProperty => `${animatedProperty} ${msify(duration)} ${easing} ${msify(delay)}`).join(\", \");\n}\nexport function getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  const constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  // Thanks to material for that formula !\n\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/animations/_utils.js"],"names":["DURATION","standard","complex","enteringScreen","leavingScreen","EASING","easeInOut","easeOut","easeIn","sharp","formatMs","ms","Math","round","msify","createAnimation","animatedProperties","options","duration","easing","delay","Array","isArray","map","animatedProperty","join","getAutoHeightDuration","height","constant"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG;AACpB;AACAC,EAAAA,QAAQ,EAAE,GAFU;AAGpB;AACAC,EAAAA,OAAO,EAAE,GAJW;AAKpB;AACAC,EAAAA,cAAc,EAAE,GANI;AAOpB;AACAC,EAAAA,aAAa,EAAE;AARK,CAAjB,C,CAWP;AACA;;AACA,OAAO,MAAMC,MAAM,GAAG;AAClB;AACAC,EAAAA,SAAS,EAAE,8BAFO;AAGlB;AACA;AACAC,EAAAA,OAAO,EAAE,8BALS;AAMlB;AACAC,EAAAA,MAAM,EAAE,4BAPU;AAQlB;AACAC,EAAAA,KAAK,EAAE;AATW,CAAf;;AAYP,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AAClB,SAAQ,GAAEC,IAAI,CAACC,KAAL,CAAWF,EAAX,CAAe,IAAzB;AACH;;AAED,SAASG,KAAT,CAAeH,EAAf,EAAmB;AACf,SAAO,OAAOA,EAAP,KAAc,QAAd,GAAyBA,EAAzB,GAA8BD,QAAQ,CAACC,EAAD,CAA7C;AACH;;AAED,OAAO,SAASI,eAAT,CAAyBC,kBAAkB,GAAG,CAAC,KAAD,CAA9C,EAAuDC,OAAO,GAAG,EAAjE,EAAqE;AACxE,QAAM;AAAEC,IAAAA,QAAQ,GAAGlB,QAAQ,CAACC,QAAtB;AAAgCkB,IAAAA,MAAM,GAAGd,MAAM,CAACC,SAAhD;AAA2Dc,IAAAA,KAAK,GAAG;AAAnE,MAAyEH,OAA/E;AAEA,SAAO,CAACI,KAAK,CAACC,OAAN,CAAcN,kBAAd,IAAoCA,kBAApC,GAAyD,CAACA,kBAAD,CAA1D,EACFO,GADE,CACGC,gBAAD,IAAuB,GAAEA,gBAAiB,IAAGV,KAAK,CAACI,QAAD,CAAW,IAAGC,MAAO,IAAGL,KAAK,CAACM,KAAD,CAAQ,EADzF,EAEFK,IAFE,CAEG,IAFH,CAAP;AAGH;AAED,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AAC1C,MAAI,CAACA,MAAL,EAAa;AACT,WAAO,CAAP;AACH;;AAED,QAAMC,QAAQ,GAAGD,MAAM,GAAG,EAA1B,CAL0C,CAO1C;AACA;;AACA,SAAOf,IAAI,CAACC,KAAL,CAAW,CAAC,IAAI,KAAKe,QAAQ,IAAI,IAArB,GAA4BA,QAAQ,GAAG,CAAxC,IAA6C,EAAxD,CAAP;AACH","sourcesContent":["// Follow https://material.io/design/motion/speed.html#easing\n// to learn when use what timing\nexport const DURATION = {\n    // most basic recommended timing\n    standard: 300,\n    // this is to be used in complex animations\n    complex: 375,\n    // recommended when something is entering screen\n    enteringScreen: 225,\n    // recommended when something is leaving screen\n    leavingScreen: 195,\n};\n\n// Follow https://material.io/design/motion/speed.html#easing\n// to learn the context in which each easing should be used.\nexport const EASING = {\n    // This is the most common easing curve.\n    easeInOut: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n    // Objects enter the screen at full velocity from off-screen and\n    // slowly decelerate to a resting point.\n    easeOut: \"cubic-bezier(0.0, 0, 0.2, 1)\",\n    // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n    easeIn: \"cubic-bezier(0.4, 0, 1, 1)\",\n    // The sharp curve is used by objects that may return to the screen at any time.\n    sharp: \"cubic-bezier(0.4, 0, 0.6, 1)\",\n};\n\nfunction formatMs(ms) {\n    return `${Math.round(ms)}ms`;\n}\n\nfunction msify(ms) {\n    return typeof ms === \"string\" ? ms : formatMs(ms);\n}\n\nexport function createAnimation(animatedProperties = [\"all\"], options = {}) {\n    const { duration = DURATION.standard, easing = EASING.easeInOut, delay = 0 } = options;\n\n    return (Array.isArray(animatedProperties) ? animatedProperties : [animatedProperties])\n        .map((animatedProperty) => `${animatedProperty} ${msify(duration)} ${easing} ${msify(delay)}`)\n        .join(\", \");\n}\n\nexport function getAutoHeightDuration(height) {\n    if (!height) {\n        return 0;\n    }\n\n    const constant = height / 36;\n\n    // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n    // Thanks to material for that formula !\n    return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n"]},"metadata":{},"sourceType":"module"}