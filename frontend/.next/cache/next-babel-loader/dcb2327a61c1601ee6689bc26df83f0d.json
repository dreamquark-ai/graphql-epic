{"ast":null,"code":"import _defineProperty from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/lucas/Desktop/advanced/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/cards/Card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nexport function Card(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      onClick = _ref.onClick,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"disabled\", \"onClick\"]);\n\n  var cardClassName = classnames(\"brain-o-box\", \"brain-o-paper\", {\n    \"brain-o-actionable\": !!onClick,\n    \"brain-o-paper--shadow\": !!onClick,\n    \"brain-c-card--elevated\": !!onClick\n  }, \"brain-c-card\", className);\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    className: cardClassName,\n    disabled: disabled === true\n  }, otherProps), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = Card;\nCard.propTypes = {\n  /**\n   * Content of card\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional className for card\n   */\n  className: PropTypes.string,\n\n  /**\n   * If is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Click handler\n   */\n  onClick: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/cards/Card.js"],"names":["React","PropTypes","classnames","Card","children","className","disabled","onClick","otherProps","cardClassName","propTypes","node","string","bool","func"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,SAASC,IAAT,OAAiF;AAAA,MAAjEC,QAAiE,QAAjEA,QAAiE;AAAA,MAAvDC,SAAuD,QAAvDA,SAAuD;AAAA,2BAA5CC,QAA4C;AAAA,MAA5CA,QAA4C,8BAAjC,KAAiC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAdC,UAAc;;AACpF,MAAMC,aAAa,GAAGP,UAAU,CAC5B,aAD4B,EAE5B,eAF4B,EAG5B;AACI,0BAAsB,CAAC,CAACK,OAD5B;AAEI,6BAAyB,CAAC,CAACA,OAF/B;AAGI,8BAA0B,CAAC,CAACA;AAHhC,GAH4B,EAQ5B,cAR4B,EAS5BF,SAT4B,CAAhC;AAYA,sBACI;AAAK,IAAA,SAAS,EAAEI,aAAhB;AAA+B,IAAA,QAAQ,EAAEH,QAAQ,KAAK;AAAtD,KAAgEE,UAAhE;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAlBeD,I;AAoBhBA,IAAI,CAACO,SAAL,GAAiB;AACb;AACJ;AACA;AACIN,EAAAA,QAAQ,EAAEH,SAAS,CAACU,IAJP;;AAKb;AACJ;AACA;AACIN,EAAAA,SAAS,EAAEJ,SAAS,CAACW,MARR;;AASb;AACJ;AACA;AACIN,EAAAA,QAAQ,EAAEL,SAAS,CAACY,IAZP;;AAab;AACJ;AACA;AACIN,EAAAA,OAAO,EAAEN,SAAS,CAACa;AAhBN,CAAjB","sourcesContent":["// Libs\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport function Card({ children, className, disabled = false, onClick, ...otherProps }) {\n    const cardClassName = classnames(\n        \"brain-o-box\",\n        \"brain-o-paper\",\n        {\n            \"brain-o-actionable\": !!onClick,\n            \"brain-o-paper--shadow\": !!onClick,\n            \"brain-c-card--elevated\": !!onClick,\n        },\n        \"brain-c-card\",\n        className\n    );\n\n    return (\n        <div className={cardClassName} disabled={disabled === true} {...otherProps}>\n            {children}\n        </div>\n    );\n}\n\nCard.propTypes = {\n    /**\n     * Content of card\n     */\n    children: PropTypes.node,\n    /**\n     * Additional className for card\n     */\n    className: PropTypes.string,\n    /**\n     * If is disabled\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Click handler\n     */\n    onClick: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}