{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lucas/Desktop/advanced/frontend/new_components/molecules/displays/Display.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Libs\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // Utils\n\nimport { wrapLabel } from \"../../_utils\"; // Components\n\nimport { IconWrapper, ICON_POSITION } from \"../icons\";\nimport { DisplayContext } from \"./DisplayContext\";\nexport const DISPLAY_TYPES = {\n  ROW: \"row\",\n  COLUMN: \"column\"\n};\nconst DISPLAY_TYPES_ICON_POSITION_MAPPER = {\n  [DISPLAY_TYPES.ROW]: ICON_POSITION.RIGHT,\n  [DISPLAY_TYPES.COLUMN]: ICON_POSITION.LEFT\n};\nexport function Display(_ref) {\n  let {\n    children,\n    className,\n    icon,\n    iconClassName: iconClassNameProp,\n    iconProps,\n    label,\n    onClick,\n    role = \"button\",\n    tabIndex = 0,\n    type: typeProp = DISPLAY_TYPES.ROW,\n    value\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"icon\", \"iconClassName\", \"iconProps\", \"label\", \"onClick\", \"role\", \"tabIndex\", \"type\", \"value\"]);\n\n  const {\n    type: typeContext\n  } = useContext(DisplayContext);\n  const type = typeContext !== null && typeContext !== void 0 ? typeContext : typeProp;\n  const displayClassName = classnames(\"brain-c-display\", {\n    \"brain-o-actionable\": !!onClick,\n    \"brain-c-display--horizontal\": type === DISPLAY_TYPES.ROW,\n    \"brain-c-display--vertical\": type === DISPLAY_TYPES.COLUMN\n  }, className);\n  const iconClassName = classnames(\"brain-c-display__icon brain-c-display__value\", iconClassNameProp);\n  const child = wrapLabel(value !== null && value !== void 0 ? value : children);\n  return (\n    /*#__PURE__*/\n\n    /* The <div> element has a child <role> attribute that allows keyboard interaction */\n\n    /* eslint-disable-next-line jsx-a11y/no-static-element-interactions */\n    _jsxDEV(\"div\", _objectSpread(_objectSpread({}, otherProps), {}, {\n      className: displayClassName,\n      onClick: onClick,\n      onKeyPress: onClick,\n      role: onClick ? role : undefined,\n      tabIndex: onClick ? tabIndex : undefined,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brain-c-display__label brain-u-text--label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconWrapper, _objectSpread(_objectSpread({}, iconProps), {}, {\n        className: iconClassName,\n        icon: icon,\n        position: DISPLAY_TYPES_ICON_POSITION_MAPPER[type],\n        children: child\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  );\n}\nDisplay.propTypes = {\n  /**\n   * Children to display\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional className for display\n   */\n  className: PropTypes.string,\n\n  /**\n   * Icon component\n   */\n  icon: IconWrapper.propTypes.icon,\n\n  /**\n   * Additional className for icon\n   */\n  iconClassName: PropTypes.string,\n\n  /**\n   * Additional props for icon\n   */\n  iconProps: PropTypes.shape(IconWrapper.propTypes),\n\n  /**\n   * Label\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Click handler\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Role to the display\n   */\n  role: PropTypes.string,\n\n  /**\n   * Tab index value\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Type of display\n   */\n  type: PropTypes.oneOf(Object.values(DISPLAY_TYPES)),\n\n  /**\n   * Value\n   */\n  value: PropTypes.string\n};","map":{"version":3,"sources":["/Users/lucas/Desktop/advanced/frontend/new_components/molecules/displays/Display.js"],"names":["React","useContext","PropTypes","classnames","wrapLabel","IconWrapper","ICON_POSITION","DisplayContext","DISPLAY_TYPES","ROW","COLUMN","DISPLAY_TYPES_ICON_POSITION_MAPPER","RIGHT","LEFT","Display","children","className","icon","iconClassName","iconClassNameProp","iconProps","label","onClick","role","tabIndex","type","typeProp","value","otherProps","typeContext","displayClassName","child","undefined","propTypes","node","string","shape","isRequired","func","number","oneOf","Object","values"],"mappings":"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","sourcesContent":["// Libs\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n// Utils\nimport { wrapLabel } from \"../../_utils\";\n\n// Components\nimport { IconWrapper, ICON_POSITION } from \"../icons\";\nimport { DisplayContext } from \"./DisplayContext\";\n\nexport const DISPLAY_TYPES = {\n    ROW: \"row\",\n    COLUMN: \"column\",\n};\n\nconst DISPLAY_TYPES_ICON_POSITION_MAPPER = {\n    [DISPLAY_TYPES.ROW]: ICON_POSITION.RIGHT,\n    [DISPLAY_TYPES.COLUMN]: ICON_POSITION.LEFT,\n};\n\nexport function Display({\n    children,\n    className,\n    icon,\n    iconClassName: iconClassNameProp,\n    iconProps,\n    label,\n    onClick,\n    role = \"button\",\n    tabIndex = 0,\n    type: typeProp = DISPLAY_TYPES.ROW,\n    value,\n    ...otherProps\n}) {\n    const { type: typeContext } = useContext(DisplayContext);\n    const type = typeContext ?? typeProp;\n\n    const displayClassName = classnames(\n        \"brain-c-display\",\n        {\n            \"brain-o-actionable\": !!onClick,\n            \"brain-c-display--horizontal\": type === DISPLAY_TYPES.ROW,\n            \"brain-c-display--vertical\": type === DISPLAY_TYPES.COLUMN,\n        },\n        className\n    );\n    const iconClassName = classnames(\"brain-c-display__icon brain-c-display__value\", iconClassNameProp);\n\n    const child = wrapLabel(value ?? children);\n\n    return (\n        /* The <div> element has a child <role> attribute that allows keyboard interaction */\n        /* eslint-disable-next-line jsx-a11y/no-static-element-interactions */\n        <div\n            {...otherProps}\n            className={displayClassName}\n            onClick={onClick}\n            onKeyPress={onClick}\n            role={onClick ? role : undefined}\n            tabIndex={onClick ? tabIndex : undefined}\n        >\n            <div className=\"brain-c-display__label brain-u-text--label\">{label}</div>\n            <IconWrapper\n                {...iconProps}\n                className={iconClassName}\n                icon={icon}\n                position={DISPLAY_TYPES_ICON_POSITION_MAPPER[type]}\n            >\n                {child}\n            </IconWrapper>\n        </div>\n    );\n}\n\nDisplay.propTypes = {\n    /**\n     * Children to display\n     */\n    children: PropTypes.node,\n    /**\n     * Additional className for display\n     */\n    className: PropTypes.string,\n    /**\n     * Icon component\n     */\n    icon: IconWrapper.propTypes.icon,\n    /**\n     * Additional className for icon\n     */\n    iconClassName: PropTypes.string,\n    /**\n     * Additional props for icon\n     */\n    iconProps: PropTypes.shape(IconWrapper.propTypes),\n    /**\n     * Label\n     */\n    label: PropTypes.string.isRequired,\n    /**\n     * Click handler\n     */\n    onClick: PropTypes.func,\n    /**\n     * Role to the display\n     */\n    role: PropTypes.string,\n    /**\n     * Tab index value\n     */\n    tabIndex: PropTypes.number,\n    /**\n     * Type of display\n     */\n    type: PropTypes.oneOf(Object.values(DISPLAY_TYPES)),\n    /**\n     * Value\n     */\n    value: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}